/// <reference types="react" />
import { CSSObject } from 'styled-components';
import { Direction } from './constants';
import { ConditionalStyles, TableColumn, DefaultSortField, Format, RowRecord, Selector, SortDirection, SortFunction } from './types';
export declare function isEmpty(field?: string | number | undefined): boolean;
export declare function setRowData<T>(rows: Array<T>, selector: Selector<T> | null | undefined, direction: SortDirection, sortServer: boolean, sortFn?: SortFunction<T> | null): Array<T>;
export declare function sort<T = RowRecord>(rows: Array<T>, selector: Selector<T> | null | undefined, direction: SortDirection, sortFn?: SortFunction<T> | null): T[];
export declare function getProperty<T extends Record<string, any>>(row: T, selector: Selector<T> | undefined | null | unknown, format: Format<T> | undefined | null, rowIndex: number): React.ReactNode;
export declare function insertItem<T>(array: T[] | undefined, item: T, index?: number): Array<T>;
export declare function removeItem<T extends RowRecord>(array: T[] | undefined, item: T, keyField?: string): Array<T>;
export declare function decorateColumns<T>(columns: TableColumn<T>[]): TableColumn<T>[];
export declare function getColumnById<T>(id: DefaultSortField, columns: TableColumn<T>[]): TableColumn<T> | undefined;
export declare function getSortDirection(ascDirection?: boolean | undefined): SortDirection;
export declare function handleFunctionProps(object: {
    [key: string]: unknown;
}, ...args: unknown[]): {
    [key: string]: unknown;
};
export declare function getNumberOfPages(rowCount: number, rowsPerPage: number): number;
export declare function recalculatePage(prevPage: number, nextPage: number): number;
export declare const noop: () => null;
export declare function getConditionalStyle<T>(row: T, conditionalRowStyles?: ConditionalStyles<T>[]): CSSObject;
export declare function isRowSelected<T extends RowRecord>(row: T, selectedRows?: Array<T>, keyField?: string): boolean;
export declare function detectRTL(direction?: Direction): boolean;
export declare function isOdd(num: number): boolean;
