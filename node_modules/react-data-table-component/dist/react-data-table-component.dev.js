'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var styled = require('styled-components');
var orderBy = require('lodash.orderby');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () {
                        return e[k];
                    }
                });
            }
        });
    }
    n['default'] = e;
    return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var orderBy__default = /*#__PURE__*/_interopDefaultLegacy(orderBy);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __spreadArray(to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var STOP_PROP_TAG = 'allowRowEvents';
exports.Direction = void 0;
(function (Direction) {
    Direction["LTR"] = "ltr";
    Direction["RTL"] = "rtl";
    Direction["AUTO"] = "auto";
})(exports.Direction || (exports.Direction = {}));
exports.Alignment = void 0;
(function (Alignment) {
    Alignment["Left"] = "left";
    Alignment["Right"] = "right";
    Alignment["Center"] = "center";
})(exports.Alignment || (exports.Alignment = {}));
exports.Media = void 0;
(function (Media) {
    Media["SM"] = "sm";
    Media["MD"] = "md";
    Media["LG"] = "lg";
})(exports.Media || (exports.Media = {}));

function isEmpty(field) {
    if (field === void 0) { field = ''; }
    if (typeof field === 'number') {
        return false;
    }
    return !field || field.length === 0;
}
function setRowData(rows, selector, direction, sortServer, sortFn) {
    if (sortServer || !selector) {
        return rows;
    }
    return sort(rows, selector, direction, sortFn);
}
function sort(rows, selector, direction, sortFn) {
    if (!selector) {
        return rows;
    }
    if (sortFn && typeof sortFn === 'function') {
        return sortFn(rows, selector, direction);
    }
    return orderBy__default['default'](rows, selector, direction);
}
function getProperty(row, selector, format, rowIndex) {
    if (!selector) {
        return null;
    }
    if (typeof selector !== 'string' && typeof selector !== 'function') {
        throw new Error('selector must be a . delimited string eg (my.property) or function (e.g. row => row.field');
    }
    if (format && typeof format === 'function') {
        return format(row, rowIndex);
    }
    if (selector && typeof selector === 'function') {
        return selector(row, rowIndex);
    }
    return selector.split('.').reduce(function (acc, part) {
        var arr = part.match(/[^\]\\[.]+/g);
        if (arr && arr.length > 1) {
            for (var i = 0; i < arr.length; i++) {
                return acc[arr[i]][arr[i + 1]];
            }
        }
        return acc[part];
    }, row);
}
function insertItem(array, item, index) {
    if (array === void 0) { array = []; }
    if (index === void 0) { index = 0; }
    return __spreadArray(__spreadArray(__spreadArray([], array.slice(0, index)), [item]), array.slice(index));
}
function removeItem(array, item, keyField) {
    if (array === void 0) { array = []; }
    if (keyField === void 0) { keyField = 'id'; }
    var newArray = array.slice();
    if (item[keyField]) {
        newArray.splice(newArray.findIndex(function (a) { return a[keyField] === item[keyField]; }), 1);
    }
    else {
        newArray.splice(newArray.findIndex(function (a) { return a === item; }), 1);
    }
    return newArray;
}
function decorateColumns(columns) {
    return columns.map(function (column, index) {
        var decoratedColumn = __assign(__assign({}, column), { sortable: column.sortable || !!column.sortFunction || undefined });
        if (!column.id) {
            decoratedColumn.id = index + 1;
            return decoratedColumn;
        }
        return decoratedColumn;
    });
}
function getColumnById(id, columns) {
    if (typeof id === undefined) {
        return undefined;
    }
    return columns.find(function (col) { return col.id === id; });
}
function getSortDirection(ascDirection) {
    if (ascDirection === void 0) { ascDirection = false; }
    return ascDirection ? 'asc' : 'desc';
}
function handleFunctionProps(object) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    var newObject;
    Object.keys(object)
        .map(function (o) { return object[o]; })
        .forEach(function (value, index) {
        var _a;
        var oldObject = object;
        if (typeof value === 'function') {
            newObject = __assign(__assign({}, oldObject), (_a = {}, _a[Object.keys(object)[index]] = value.apply(void 0, args), _a));
        }
    });
    return newObject || object;
}
function getNumberOfPages(rowCount, rowsPerPage) {
    return Math.ceil(rowCount / rowsPerPage);
}
function recalculatePage(prevPage, nextPage) {
    return Math.min(prevPage, nextPage);
}
var noop = function () { return null; };
function getConditionalStyle(row, conditionalRowStyles) {
    if (conditionalRowStyles === void 0) { conditionalRowStyles = []; }
    var rowStyle = {};
    if (conditionalRowStyles.length) {
        conditionalRowStyles.forEach(function (crs) {
            if (!crs.when || typeof crs.when !== 'function') {
                throw new Error('"when" must be defined in the conditional style object and must be function');
            }
            if (crs.when(row)) {
                rowStyle = crs.style || {};
                if (typeof crs.style === 'function') {
                    rowStyle = crs.style(row) || {};
                }
            }
        });
    }
    return rowStyle;
}
function isRowSelected(row, selectedRows, keyField) {
    if (selectedRows === void 0) { selectedRows = []; }
    if (keyField === void 0) { keyField = 'id'; }
    if (row[keyField]) {
        return selectedRows.some(function (r) { return r[keyField] === row[keyField]; });
    }
    return selectedRows.some(function (r) { return r === row; });
}
function detectRTL(direction) {
    if (direction === void 0) { direction = exports.Direction.AUTO; }
    if (direction === 'auto') {
        var canUse = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
        var bodyRTL = document.getElementsByTagName('BODY')[0];
        var htmlTRL = document.getElementsByTagName('HTML')[0];
        var hasRTL = bodyRTL.dir === 'rtl' || htmlTRL.dir === 'rtl';
        return canUse && hasRTL;
    }
    return direction === 'rtl';
}
function isOdd(num) {
    return num % 2 === 0;
}

function tableReducer(state, action) {
    var toggleOnSelectedRowsChange = !state.toggleOnSelectedRowsChange;
    switch (action.type) {
        case 'UPDATE_ROWS': {
            var rows = action.rows;
            return __assign(__assign({}, state), { rows: rows });
        }
        case 'SELECT_ALL_ROWS': {
            var keyField_1 = action.keyField, rows_1 = action.rows, rowCount = action.rowCount, mergeSelections = action.mergeSelections;
            var allChecked = !state.allSelected;
            var toggleOnSelectedRowsChange_1 = !state.toggleOnSelectedRowsChange;
            if (mergeSelections) {
                var selections = allChecked
                    ? __spreadArray(__spreadArray([], state.selectedRows), rows_1.filter(function (row) { return !isRowSelected(row, state.selectedRows, keyField_1); })) : state.selectedRows.filter(function (row) { return !isRowSelected(row, rows_1, keyField_1); });
                return __assign(__assign({}, state), { allSelected: allChecked, selectedCount: selections.length, selectedRows: selections, toggleOnSelectedRowsChange: toggleOnSelectedRowsChange_1 });
            }
            return __assign(__assign({}, state), { allSelected: allChecked, selectedCount: allChecked ? rowCount : 0, selectedRows: allChecked ? rows_1 : [], toggleOnSelectedRowsChange: toggleOnSelectedRowsChange_1 });
        }
        case 'SELECT_SINGLE_ROW': {
            var keyField = action.keyField, row = action.row, isSelected = action.isSelected, rowCount = action.rowCount, singleSelect = action.singleSelect;
            if (singleSelect) {
                if (isSelected) {
                    return __assign(__assign({}, state), { selectedCount: 0, allSelected: false, selectedRows: [], toggleOnSelectedRowsChange: toggleOnSelectedRowsChange });
                }
                return __assign(__assign({}, state), { selectedCount: 1, allSelected: false, selectedRows: [row], toggleOnSelectedRowsChange: toggleOnSelectedRowsChange });
            }
            if (isSelected) {
                return __assign(__assign({}, state), { selectedCount: state.selectedRows.length > 0 ? state.selectedRows.length - 1 : 0, allSelected: false, selectedRows: removeItem(state.selectedRows, row, keyField), toggleOnSelectedRowsChange: toggleOnSelectedRowsChange });
            }
            return __assign(__assign({}, state), { selectedCount: state.selectedRows.length + 1, allSelected: state.selectedRows.length + 1 === rowCount, selectedRows: insertItem(state.selectedRows, row), toggleOnSelectedRowsChange: toggleOnSelectedRowsChange });
        }
        case 'SELECT_MULTIPLE_ROWS': {
            var keyField_2 = action.keyField, selectedRows = action.selectedRows, rows = action.rows, mergeSelections = action.mergeSelections;
            if (mergeSelections) {
                var selections = __spreadArray(__spreadArray([], state.selectedRows), selectedRows.filter(function (row) { return !isRowSelected(row, state.selectedRows, keyField_2); }));
                return __assign(__assign({}, state), { selectedCount: selections.length, allSelected: false, selectedRows: selections, toggleOnSelectedRowsChange: toggleOnSelectedRowsChange });
            }
            return __assign(__assign({}, state), { selectedCount: selectedRows.length, allSelected: selectedRows.length === rows.length, selectedRows: selectedRows,
                toggleOnSelectedRowsChange: toggleOnSelectedRowsChange });
        }
        case 'CLEAR_SELECTED_ROWS': {
            var selectedRowsFlag = action.selectedRowsFlag;
            return __assign(__assign({}, state), { allSelected: false, selectedCount: 0, selectedRows: [], selectedRowsFlag: selectedRowsFlag });
        }
        case 'SORT_CHANGE': {
            var rows = action.rows, sortDirection = action.sortDirection, selectedColumn = action.selectedColumn, clearSelectedOnSort = action.clearSelectedOnSort;
            return __assign(__assign(__assign({}, state), { rows: rows,
                selectedColumn: selectedColumn,
                sortDirection: sortDirection, currentPage: 1 }), (clearSelectedOnSort && {
                allSelected: false,
                selectedCount: 0,
                selectedRows: [],
                toggleOnSelectedRowsChange: toggleOnSelectedRowsChange,
            }));
        }
        case 'CHANGE_PAGE': {
            var page = action.page, paginationServer = action.paginationServer, visibleOnly = action.visibleOnly, persistSelectedOnPageChange = action.persistSelectedOnPageChange;
            var mergeSelections = paginationServer && persistSelectedOnPageChange;
            var clearSelectedOnPage = (paginationServer && !persistSelectedOnPageChange) || visibleOnly;
            return __assign(__assign(__assign(__assign({}, state), { currentPage: page }), (mergeSelections && {
                allSelected: false,
            })), (clearSelectedOnPage && {
                allSelected: false,
                selectedCount: 0,
                selectedRows: [],
                toggleOnSelectedRowsChange: toggleOnSelectedRowsChange,
            }));
        }
        case 'CHANGE_ROWS_PER_PAGE': {
            var rowsPerPage = action.rowsPerPage, page = action.page;
            return __assign(__assign({}, state), { currentPage: page, rowsPerPage: rowsPerPage });
        }
    }
}

var disabledCSS = styled.css(templateObject_1$o || (templateObject_1$o = __makeTemplateObject(["\n\tpointer-events: none;\n\topacity: 0.4;\n"], ["\n\tpointer-events: none;\n\topacity: 0.4;\n"])));
var TableStyle = styled__default['default'].div(templateObject_2$b || (templateObject_2$b = __makeTemplateObject(["\n\tposition: relative;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\theight: 100%;\n\tmax-width: 100%;\n\t", ";\n\t", ";\n"], ["\n\tposition: relative;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\theight: 100%;\n\tmax-width: 100%;\n\t", ";\n\t", ";\n"])), function (_a) {
    var disabled = _a.disabled;
    return disabled && disabledCSS;
}, function (_a) {
    var theme = _a.theme;
    return theme.table.style;
});
var templateObject_1$o, templateObject_2$b;

var TableHead = styled__default['default'].div(templateObject_1$n || (templateObject_1$n = __makeTemplateObject(["\n\tdisplay: flex;\n\ttext-align: left;\n\t", ";\n"], ["\n\tdisplay: flex;\n\ttext-align: left;\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.head.style;
});
var templateObject_1$n;

var TableHeadRow = styled__default['default'].div(templateObject_1$m || (templateObject_1$m = __makeTemplateObject(["\n\tdisplay: flex;\n\talign-items: stretch;\n\twidth: 100%;\n\t", ";\n\t", ";\n"], ["\n\tdisplay: flex;\n\talign-items: stretch;\n\twidth: 100%;\n\t", ";\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.headRow.style;
}, function (_a) {
    var dense = _a.dense, theme = _a.theme;
    return dense && theme.headRow.denseStyle;
});
var templateObject_1$m;

var SMALL = 599;
var MEDIUM = 959;
var LARGE = 1280;
var media = {
    sm: function (literals) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return styled.css(templateObject_1$l || (templateObject_1$l = __makeTemplateObject(["\n\t\t@media screen and (max-width: ", "px) {\n\t\t\t", "\n\t\t}\n\t"], ["\n\t\t@media screen and (max-width: ", "px) {\n\t\t\t", "\n\t\t}\n\t"])), SMALL, styled.css.apply(void 0, __spreadArray([literals], args)));
    },
    md: function (literals) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return styled.css(templateObject_2$a || (templateObject_2$a = __makeTemplateObject(["\n\t\t@media screen and (max-width: ", "px) {\n\t\t\t", "\n\t\t}\n\t"], ["\n\t\t@media screen and (max-width: ", "px) {\n\t\t\t", "\n\t\t}\n\t"])), MEDIUM, styled.css.apply(void 0, __spreadArray([literals], args)));
    },
    lg: function (literals) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return styled.css(templateObject_3$7 || (templateObject_3$7 = __makeTemplateObject(["\n\t\t@media screen and (max-width: ", "px) {\n\t\t\t", "\n\t\t}\n\t"], ["\n\t\t@media screen and (max-width: ", "px) {\n\t\t\t", "\n\t\t}\n\t"])), LARGE, styled.css.apply(void 0, __spreadArray([literals], args)));
    },
    custom: function (value) {
        return function (literals) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            return styled.css(templateObject_4$3 || (templateObject_4$3 = __makeTemplateObject(["\n\t\t\t\t@media screen and (max-width: ", "px) {\n\t\t\t\t\t", "\n\t\t\t\t}\n\t\t\t"], ["\n\t\t\t\t@media screen and (max-width: ", "px) {\n\t\t\t\t\t", "\n\t\t\t\t}\n\t\t\t"])), value, styled.css.apply(void 0, __spreadArray([literals], args)));
        };
    },
};
var templateObject_1$l, templateObject_2$a, templateObject_3$7, templateObject_4$3;

var CellBase = styled__default['default'].div(templateObject_1$k || (templateObject_1$k = __makeTemplateObject(["\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tline-height: normal;\n\t", ";\n\t", ";\n"], ["\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tline-height: normal;\n\t", ";\n\t", ";\n"])), function (_a) {
    var theme = _a.theme, head = _a.head;
    return theme[head ? 'headCells' : 'cells'].style;
}, function (_a) {
    var noPadding = _a.noPadding;
    return noPadding && 'padding: 0';
});
var Cell = styled__default['default'](CellBase)(templateObject_7$1 || (templateObject_7$1 = __makeTemplateObject(["\n\tflex-grow: ", ";\n\tflex-shrink: 0;\n\tflex-basis: 0;\n\tmax-width: ", ";\n\tmin-width: ", ";\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n\n\t/* handle hiding cells */\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n"], ["\n\tflex-grow: ", ";\n\tflex-shrink: 0;\n\tflex-basis: 0;\n\tmax-width: ", ";\n\tmin-width: ", ";\n\t",
    ";\n\t", ";\n\t", ";\n\t", ";\n\n\t/* handle hiding cells */\n\t",
    ";\n\t",
    ";\n\t",
    ";\n\t",
    ";\n"])), function (_a) {
    var button = _a.button, grow = _a.grow;
    return (grow === 0 || button ? 0 : grow || 1);
}, function (_a) {
    var maxWidth = _a.maxWidth;
    return maxWidth || '100%';
}, function (_a) {
    var minWidth = _a.minWidth;
    return minWidth || '100px';
}, function (_a) {
    var width = _a.width;
    return width && styled.css(templateObject_2$9 || (templateObject_2$9 = __makeTemplateObject(["\n\t\t\tmin-width: ", ";\n\t\t\tmax-width: ", ";\n\t\t"], ["\n\t\t\tmin-width: ", ";\n\t\t\tmax-width: ", ";\n\t\t"])), width, width);
}, function (_a) {
    var right = _a.right;
    return right && 'justify-content: flex-end';
}, function (_a) {
    var button = _a.button, center = _a.center;
    return (center || button) && 'justify-content: center';
}, function (_a) {
    var compact = _a.compact, button = _a.button;
    return (compact || button) && 'padding: 0';
}, function (_a) {
    var hide = _a.hide;
    return hide &&
        hide === 'sm' && media.sm(templateObject_3$6 || (templateObject_3$6 = __makeTemplateObject(["\n    display: none;\n  "], ["\n    display: none;\n  "])));
}, function (_a) {
    var hide = _a.hide;
    return hide &&
        hide === 'md' && media.md(templateObject_4$2 || (templateObject_4$2 = __makeTemplateObject(["\n    display: none;\n  "], ["\n    display: none;\n  "])));
}, function (_a) {
    var hide = _a.hide;
    return hide &&
        hide === 'lg' && media.lg(templateObject_5$1 || (templateObject_5$1 = __makeTemplateObject(["\n    display: none;\n  "], ["\n    display: none;\n  "])));
}, function (_a) {
    var hide = _a.hide;
    return hide &&
        Number.isInteger(hide) && media.custom(hide)(templateObject_6$1 || (templateObject_6$1 = __makeTemplateObject(["\n    display: none;\n  "], ["\n    display: none;\n  "])));
});
var templateObject_1$k, templateObject_2$9, templateObject_3$6, templateObject_4$2, templateObject_5$1, templateObject_6$1, templateObject_7$1;

var overflowCSS = styled.css(templateObject_1$j || (templateObject_1$j = __makeTemplateObject(["\n\tdiv:first-child {\n\t\twhite-space: ", ";\n\t\toverflow: ", ";\n\t\ttext-overflow: ellipsis;\n\t}\n"], ["\n\tdiv:first-child {\n\t\twhite-space: ", ";\n\t\toverflow: ", ";\n\t\ttext-overflow: ellipsis;\n\t}\n"])), function (_a) {
    var wrapCell = _a.wrapCell;
    return (wrapCell ? 'normal' : 'nowrap');
}, function (_a) {
    var allowOverflow = _a.allowOverflow;
    return (allowOverflow ? 'visible' : 'hidden');
});
var TableCellStyle = styled__default['default'](Cell).attrs(function (props) { return ({
    style: props.style,
}); })(templateObject_2$8 || (templateObject_2$8 = __makeTemplateObject(["\n\tfont-size: ", ";\n\tfont-weight: 400;\n\t", ";\n\t", ";\n"], ["\n\tfont-size: ", ";\n\tfont-weight: 400;\n\t", ";\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.rows.fontSize;
}, function (_a) {
    var renderAsCell = _a.renderAsCell;
    return !renderAsCell && overflowCSS;
}, function (_a) {
    var cellStyle = _a.cellStyle;
    return cellStyle;
});
function TableCell(_a) {
    var column = _a.column, dataTag = _a.dataTag, extendedCellStyle = _a.extendedCellStyle, id = _a.id, renderAsCell = _a.renderAsCell, children = _a.children;
    return (React__namespace.createElement(TableCellStyle, { id: id, role: "gridcell", className: "rdt_TableCell", "data-tag": dataTag, cellStyle: column.style, renderAsCell: renderAsCell, allowOverflow: column.allowOverflow, button: column.button, center: column.center, compact: column.compact, grow: column.grow, hide: column.hide, maxWidth: column.maxWidth, minWidth: column.minWidth, right: column.right, width: column.width, wrapCell: column.wrap, style: extendedCellStyle }, children));
}
var TableCell$1 = React__namespace.memo(TableCell);
var templateObject_1$j, templateObject_2$8;

var defaultComponentName = 'input';
var calculateBaseStyle = function (disabled) { return (__assign(__assign({ fontSize: '18px' }, (!disabled && { cursor: 'pointer' })), { padding: 0, marginTop: '1px', verticalAlign: 'middle', position: 'relative' })); };
function Checkbox(_a) {
    var name = _a.name, _b = _a.component, component = _b === void 0 ? defaultComponentName : _b, _c = _a.componentOptions, componentOptions = _c === void 0 ? { style: {} } : _c, _d = _a.indeterminate, indeterminate = _d === void 0 ? false : _d, _e = _a.checked, checked = _e === void 0 ? false : _e, _f = _a.disabled, disabled = _f === void 0 ? false : _f, _g = _a.onClick, onClick = _g === void 0 ? noop : _g;
    var setCheckboxRef = function (checkbox) {
        if (checkbox) {
            checkbox.indeterminate = indeterminate;
        }
    };
    var TagName = component;
    var baseStyle = TagName !== defaultComponentName ? componentOptions.style : calculateBaseStyle(disabled);
    var resolvedComponentOptions = React__namespace.useMemo(function () { return handleFunctionProps(componentOptions, indeterminate); }, [componentOptions, indeterminate]);
    return (React__namespace.createElement(TagName, __assign({ type: "checkbox", ref: setCheckboxRef, style: baseStyle, onClick: disabled ? noop : onClick, name: name, "aria-label": name, checked: checked, disabled: disabled }, resolvedComponentOptions, { onChange: noop })));
}
var Checkbox$1 = React__namespace.memo(Checkbox);

var TableCellCheckboxStyle = styled__default['default'](CellBase)(templateObject_1$i || (templateObject_1$i = __makeTemplateObject(["\n\tflex: 0 0 48px;\n\tmin-width: 48px;\n\tjustify-content: center;\n\talign-items: center;\n\tuser-select: none;\n\twhite-space: nowrap;\n"], ["\n\tflex: 0 0 48px;\n\tmin-width: 48px;\n\tjustify-content: center;\n\talign-items: center;\n\tuser-select: none;\n\twhite-space: nowrap;\n"])));
function TableCellCheckbox(_a) {
    var keyField = _a.keyField, row = _a.row, rowCount = _a.rowCount, selected = _a.selected, selectableRowsComponent = _a.selectableRowsComponent, selectableRowsComponentProps = _a.selectableRowsComponentProps, selectableRowsSingle = _a.selectableRowsSingle, selectableRowDisabled = _a.selectableRowDisabled, onSelectedRow = _a.onSelectedRow;
    var disabled = !!(selectableRowDisabled && selectableRowDisabled(row));
    var handleOnRowSelected = function () {
        onSelectedRow({
            type: 'SELECT_SINGLE_ROW',
            row: row,
            isSelected: selected,
            keyField: keyField,
            rowCount: rowCount,
            singleSelect: selectableRowsSingle,
        });
    };
    return (React__namespace.createElement(TableCellCheckboxStyle, { onClick: function (e) { return e.stopPropagation(); }, className: "rdt_TableCell", noPadding: true },
        React__namespace.createElement(Checkbox$1, { name: "select-row-" + row[keyField], component: selectableRowsComponent, componentOptions: selectableRowsComponentProps, checked: selected, "aria-checked": selected, onClick: handleOnRowSelected, disabled: disabled })));
}
var templateObject_1$i;

var ButtonStyle = styled__default['default'].button(templateObject_1$h || (templateObject_1$h = __makeTemplateObject(["\n\tdisplay: inline-flex;\n\talign-items: center;\n\tuser-select: none;\n\twhite-space: nowrap;\n\tborder: none;\n\tbackground-color: transparent;\n\t", ";\n"], ["\n\tdisplay: inline-flex;\n\talign-items: center;\n\tuser-select: none;\n\twhite-space: nowrap;\n\tborder: none;\n\tbackground-color: transparent;\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.expanderButton.style;
});
function ExpanderButton(_a) {
    var _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.expanded, expanded = _c === void 0 ? false : _c, expandableIcon = _a.expandableIcon, id = _a.id, row = _a.row, onToggled = _a.onToggled;
    var icon = expanded ? expandableIcon.expanded : expandableIcon.collapsed;
    var handleToggle = function () { return onToggled && onToggled(row); };
    return (React__namespace.createElement(ButtonStyle, { "aria-disabled": disabled, onClick: handleToggle, "data-testid": "expander-button-" + id, disabled: disabled, "aria-label": expanded ? 'Collapse Row' : 'Expand Row', role: "button", type: "button" }, icon));
}
var templateObject_1$h;

var TableCellExpanderStyle = styled__default['default'](CellBase)(templateObject_1$g || (templateObject_1$g = __makeTemplateObject(["\n\twhite-space: nowrap;\n\tfont-weight: 400;\n\tmin-width: 48px;\n\t", ";\n"], ["\n\twhite-space: nowrap;\n\tfont-weight: 400;\n\tmin-width: 48px;\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.expanderCell.style;
});
function TableCellExpander(_a) {
    var row = _a.row, _b = _a.expanded, expanded = _b === void 0 ? false : _b, expandableIcon = _a.expandableIcon, id = _a.id, onToggled = _a.onToggled, _c = _a.disabled, disabled = _c === void 0 ? false : _c;
    return (React__namespace.createElement(TableCellExpanderStyle, { onClick: function (e) { return e.stopPropagation(); }, noPadding: true },
        React__namespace.createElement(ExpanderButton, { id: id, row: row, expanded: expanded, expandableIcon: expandableIcon, disabled: disabled, onToggled: onToggled })));
}
var templateObject_1$g;

var ExpanderRowStyle = styled__default['default'].div(templateObject_1$f || (templateObject_1$f = __makeTemplateObject(["\n\twidth: 100%;\n\tbox-sizing: border-box;\n\t", ";\n\t", ";\n"], ["\n\twidth: 100%;\n\tbox-sizing: border-box;\n\t", ";\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.expanderRow.style;
}, function (_a) {
    var extendedRowStyle = _a.extendedRowStyle;
    return extendedRowStyle;
});
function ExpanderRow(_a) {
    var data = _a.data, component = _a.component, componentProps = _a.componentProps, extendedRowStyle = _a.extendedRowStyle;
    var ExpandableComponent = component;
    return (React__namespace.createElement(ExpanderRowStyle, { className: "rdt_ExpanderRow", extendedRowStyle: extendedRowStyle },
        React__namespace.createElement(ExpandableComponent, __assign({ data: data }, componentProps))));
}
var ExpanderRow$1 = React__namespace.memo(ExpanderRow);
var templateObject_1$f;

var highlightCSS = styled.css(templateObject_1$e || (templateObject_1$e = __makeTemplateObject(["\n\t&:hover {\n\t\t", ";\n\t}\n"], ["\n\t&:hover {\n\t\t", ";\n\t}\n"])), function (_a) {
    var highlightOnHover = _a.highlightOnHover, theme = _a.theme;
    return highlightOnHover && theme.rows.highlightOnHoverStyle;
});
var pointerCSS = styled.css(templateObject_2$7 || (templateObject_2$7 = __makeTemplateObject(["\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n"], ["\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n"])));
var TableRowStyle = styled__default['default'].div.attrs(function (props) { return ({
    style: props.style,
}); })(templateObject_3$5 || (templateObject_3$5 = __makeTemplateObject(["\n\tdisplay: flex;\n\talign-items: stretch;\n\talign-content: stretch;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n"], ["\n\tdisplay: flex;\n\talign-items: stretch;\n\talign-content: stretch;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.rows.style;
}, function (_a) {
    var dense = _a.dense, theme = _a.theme;
    return dense && theme.rows.denseStyle;
}, function (_a) {
    var striped = _a.striped, theme = _a.theme;
    return striped && theme.rows.stripedStyle;
}, function (_a) {
    var highlightOnHover = _a.highlightOnHover;
    return highlightOnHover && highlightCSS;
}, function (_a) {
    var pointerOnHover = _a.pointerOnHover;
    return pointerOnHover && pointerCSS;
}, function (_a) {
    var selected = _a.selected, theme = _a.theme;
    return selected && theme.rows.selectedHighlightStyle;
});
function TableRow(_a) {
    var _b = _a.columns, columns = _b === void 0 ? [] : _b, _c = _a.conditionalRowStyles, conditionalRowStyles = _c === void 0 ? [] : _c, _d = _a.defaultExpanded, defaultExpanded = _d === void 0 ? false : _d, _e = _a.defaultExpanderDisabled, defaultExpanderDisabled = _e === void 0 ? false : _e, _f = _a.dense, dense = _f === void 0 ? false : _f, expandableIcon = _a.expandableIcon, _g = _a.expandableRows, expandableRows = _g === void 0 ? false : _g, expandableRowsComponent = _a.expandableRowsComponent, expandableRowsComponentProps = _a.expandableRowsComponentProps, expandableRowsHideExpander = _a.expandableRowsHideExpander, _h = _a.expandOnRowClicked, expandOnRowClicked = _h === void 0 ? false : _h, _j = _a.expandOnRowDoubleClicked, expandOnRowDoubleClicked = _j === void 0 ? false : _j, _k = _a.highlightOnHover, highlightOnHover = _k === void 0 ? false : _k, id = _a.id, expandableInheritConditionalStyles = _a.expandableInheritConditionalStyles, keyField = _a.keyField, _l = _a.onRowClicked, onRowClicked = _l === void 0 ? noop : _l, _m = _a.onRowDoubleClicked, onRowDoubleClicked = _m === void 0 ? noop : _m, _o = _a.onRowExpandToggled, onRowExpandToggled = _o === void 0 ? noop : _o, _p = _a.onSelectedRow, onSelectedRow = _p === void 0 ? noop : _p, _q = _a.pointerOnHover, pointerOnHover = _q === void 0 ? false : _q, row = _a.row, rowCount = _a.rowCount, rowIndex = _a.rowIndex, _r = _a.selectableRowDisabled, selectableRowDisabled = _r === void 0 ? null : _r, _s = _a.selectableRows, selectableRows = _s === void 0 ? false : _s, selectableRowsComponent = _a.selectableRowsComponent, selectableRowsComponentProps = _a.selectableRowsComponentProps, _t = _a.selectableRowsHighlight, selectableRowsHighlight = _t === void 0 ? false : _t, _u = _a.selectableRowsSingle, selectableRowsSingle = _u === void 0 ? false : _u, selected = _a.selected, _v = _a.striped, striped = _v === void 0 ? false : _v;
    var _w = React__namespace.useState(defaultExpanded), expanded = _w[0], setExpanded = _w[1];
    React__namespace.useEffect(function () {
        setExpanded(defaultExpanded);
    }, [defaultExpanded]);
    var handleExpanded = React__namespace.useCallback(function () {
        setExpanded(!expanded);
        onRowExpandToggled(!expanded, row);
    }, [expanded, onRowExpandToggled, row]);
    var showPointer = pointerOnHover || (expandableRows && (expandOnRowClicked || expandOnRowDoubleClicked));
    var handleRowClick = React__namespace.useCallback(function (e) {
        if (e.target && e.target.getAttribute('data-tag') === STOP_PROP_TAG) {
            onRowClicked(row, e);
            if (!defaultExpanderDisabled && expandableRows && expandOnRowClicked) {
                handleExpanded();
            }
        }
    }, [defaultExpanderDisabled, expandOnRowClicked, expandableRows, handleExpanded, onRowClicked, row]);
    var handleRowDoubleClick = React__namespace.useCallback(function (e) {
        if (e.target && e.target.getAttribute('data-tag') === STOP_PROP_TAG) {
            onRowDoubleClicked(row, e);
            if (!defaultExpanderDisabled && expandableRows && expandOnRowDoubleClicked) {
                handleExpanded();
            }
        }
    }, [defaultExpanderDisabled, expandOnRowDoubleClicked, expandableRows, handleExpanded, onRowDoubleClicked, row]);
    var extendedRowStyle = getConditionalStyle(row, conditionalRowStyles);
    var hightlightSelected = selectableRowsHighlight && selected;
    var inheritStyles = expandableInheritConditionalStyles ? extendedRowStyle : {};
    var isStriped = striped && isOdd(rowIndex);
    return (React__namespace.createElement(React__namespace.Fragment, null,
        React__namespace.createElement(TableRowStyle, { id: "row-" + id, role: "row", striped: isStriped, highlightOnHover: highlightOnHover, pointerOnHover: !defaultExpanderDisabled && showPointer, dense: dense, onClick: handleRowClick, onDoubleClick: handleRowDoubleClick, className: "rdt_TableRow", selected: hightlightSelected, style: extendedRowStyle },
            selectableRows && (React__namespace.createElement(TableCellCheckbox, { keyField: keyField, row: row, rowCount: rowCount, selected: selected, selectableRowsComponent: selectableRowsComponent, selectableRowsComponentProps: selectableRowsComponentProps, selectableRowDisabled: selectableRowDisabled, selectableRowsSingle: selectableRowsSingle, onSelectedRow: onSelectedRow })),
            expandableRows && !expandableRowsHideExpander && (React__namespace.createElement(TableCellExpander, { id: row[keyField], expandableIcon: expandableIcon, expanded: expanded, row: row, onToggled: handleExpanded, disabled: defaultExpanderDisabled })),
            columns.map(function (column) {
                if (column.omit) {
                    return null;
                }
                var dataTag = column.ignoreRowClick || column.button ? null : STOP_PROP_TAG;
                var extendedCellStyle = getConditionalStyle(row, column.conditionalCellStyles);
                return (React__namespace.createElement(TableCell$1, { id: "cell-" + column.id + "-" + row[keyField], key: "cell-" + column.id + "-" + row[keyField], extendedCellStyle: extendedCellStyle, dataTag: dataTag, renderAsCell: !!column.cell, column: column },
                    !column.cell && (React__namespace.createElement("div", { "data-tag": dataTag }, getProperty(row, column.selector, column.format, rowIndex))),
                    column.cell && column.cell(row, rowIndex, column, id)));
            })),
        expandableRows && expanded && (React__namespace.createElement(ExpanderRow$1, { key: "expander-" + row[keyField], data: row, extendedRowStyle: inheritStyles, component: expandableRowsComponent, componentProps: expandableRowsComponentProps }))));
}
var templateObject_1$e, templateObject_2$7, templateObject_3$5;

var Icon = styled__default['default'].span(templateObject_1$d || (templateObject_1$d = __makeTemplateObject(["\n\tpadding: 2px;\n\tcolor: inherit;\n\tflex-grow: 0;\n\tflex-shrink: 0;\n\t", ";\n\t", ";\n"], ["\n\tpadding: 2px;\n\tcolor: inherit;\n\tflex-grow: 0;\n\tflex-shrink: 0;\n\t", ";\n\t", ";\n"])), function (_a) {
    var sortActive = _a.sortActive;
    return (sortActive ? 'opacity: 1' : 'opacity: 0');
}, function (_a) {
    var sortDirection = _a.sortDirection;
    return sortDirection === 'desc' && 'transform: rotate(180deg)';
});
var NativeSortIcon = function (_a) {
    var sortActive = _a.sortActive, sortDirection = _a.sortDirection;
    return (React__default['default'].createElement(Icon, { sortActive: sortActive, sortDirection: sortDirection }, "\u25B2"));
};
var templateObject_1$d;

var TableColStyle$1 = styled__default['default'](Cell)(templateObject_1$c || (templateObject_1$c = __makeTemplateObject(["\n\t", ";\n"], ["\n\t", ";\n"])), function (_a) {
    var button = _a.button;
    return button && 'text-align: center';
});
var sortableCSS = styled.css(templateObject_2$6 || (templateObject_2$6 = __makeTemplateObject(["\n\t", ";\n\n\tspan.__rdt_custom_sort_icon__ {\n\t\ti,\n\t\tsvg {\n\t\t\t", ";\n\t\t\tcolor: inherit;\n\t\t\tfont-size: 18px !important;\n\t\t\theight: 18px !important;\n\t\t\twidth: 18px !important;\n\t\t\tbackface-visibility: hidden;\n\t\t\ttransform-style: preserve-3d;\n\t\t\ttransition-duration: 125ms;\n\t\t\ttransition-property: transform;\n\t\t}\n\n\t\t&.asc i,\n\t\t&.asc svg {\n\t\t\ttransform: rotate(180deg);\n\t\t}\n\t}\n\n\t&:hover {\n\t\tcursor: pointer;\n\t\t", ";\n\n\t\tspan,\n\t\tspan.__rdt_custom_sort_icon__ * {\n\t\t\t", ";\n\t\t}\n\t}\n"], ["\n\t", ";\n\n\tspan.__rdt_custom_sort_icon__ {\n\t\ti,\n\t\tsvg {\n\t\t\t", ";\n\t\t\tcolor: inherit;\n\t\t\tfont-size: 18px !important;\n\t\t\theight: 18px !important;\n\t\t\twidth: 18px !important;\n\t\t\tbackface-visibility: hidden;\n\t\t\ttransform-style: preserve-3d;\n\t\t\ttransition-duration: 125ms;\n\t\t\ttransition-property: transform;\n\t\t}\n\n\t\t&.asc i,\n\t\t&.asc svg {\n\t\t\ttransform: rotate(180deg);\n\t\t}\n\t}\n\n\t&:hover {\n\t\tcursor: pointer;\n\t\t", ";\n\n\t\tspan,\n\t\tspan.__rdt_custom_sort_icon__ * {\n\t\t\t", ";\n\t\t}\n\t}\n"])), function (_a) {
    var theme = _a.theme, sortActive = _a.sortActive;
    return (sortActive ? theme.headCells.activeSortStyle : theme.headCells.inactiveSortStyle);
}, function (_a) {
    var sortActive = _a.sortActive;
    return (sortActive ? 'opacity: 1' : 'opacity: 0');
}, function (_a) {
    var theme = _a.theme;
    return theme.headCells.activeStyle;
}, function (_a) {
    var sortActive = _a.sortActive;
    return !sortActive && 'opacity: 1';
});
var ColumnSortable = styled__default['default'].div(templateObject_3$4 || (templateObject_3$4 = __makeTemplateObject(["\n\talign-items: center;\n\theight: 100%;\n\tline-height: 1;\n\toutline: none;\n\tuser-select: none;\n\tdisplay: inline-flex;\n\toverflow: hidden;\n\t", ";\n"], ["\n\talign-items: center;\n\theight: 100%;\n\tline-height: 1;\n\toutline: none;\n\tuser-select: none;\n\tdisplay: inline-flex;\n\toverflow: hidden;\n\t", ";\n"])), function (_a) {
    var disabled = _a.disabled, sortable = _a.sortable;
    return sortable && !disabled && sortableCSS;
});
var ColumnText = styled__default['default'].div(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject(["\n\toverflow: hidden;\n\tfont-weight: 500;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n"], ["\n\toverflow: hidden;\n\tfont-weight: 500;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n"])));
function TableCol(_a) {
    var rows = _a.rows, column = _a.column, disabled = _a.disabled, selectedColumn = _a.selectedColumn, sortDirection = _a.sortDirection, sortFunction = _a.sortFunction, sortIcon = _a.sortIcon, sortServer = _a.sortServer, pagination = _a.pagination, paginationServer = _a.paginationServer, persistSelectedOnSort = _a.persistSelectedOnSort, selectableRowsVisibleOnly = _a.selectableRowsVisibleOnly, onSort = _a.onSort;
    React__namespace.useEffect(function () {
        if (typeof column.selector === 'string') {
            console.error("Warning: " + column.selector + " is a string based column selector which has been deprecated as of v7 and will be removed in v8. Instead, use a selector function e.g. row => row[field]...");
        }
    }, []);
    if (column.omit) {
        return null;
    }
    var handleSortChange = function () {
        if (column.sortable && column.selector) {
            var direction = sortDirection;
            if (selectedColumn.id === column.id) {
                direction = sortDirection === 'asc' ? 'desc' : 'asc';
            }
            var sortedRows = rows;
            if (!sortServer) {
                sortedRows = sort(rows, column.selector, direction, sortFunction);
                var colCustomSortFn_1 = column.sortFunction;
                if (colCustomSortFn_1) {
                    var customSortFunction = direction === 'asc' ? colCustomSortFn_1 : function (a, b) { return colCustomSortFn_1(a, b) * -1; };
                    sortedRows = __spreadArray([], rows).sort(customSortFunction);
                }
            }
            onSort({
                type: 'SORT_CHANGE',
                rows: sortedRows,
                sortDirection: direction,
                selectedColumn: column,
                clearSelectedOnSort: (pagination && paginationServer && !persistSelectedOnSort) || sortServer || selectableRowsVisibleOnly,
            });
        }
    };
    var handleKeyPress = function (event) {
        if (event.key === 'Enter') {
            handleSortChange();
        }
    };
    var renderNativeSortIcon = function (sortActive) { return (React__namespace.createElement(NativeSortIcon, { sortActive: sortActive, sortDirection: sortDirection })); };
    var renderCustomSortIcon = function () { return (React__namespace.createElement("span", { className: [sortDirection, '__rdt_custom_sort_icon__'].join(' ') }, sortIcon)); };
    var sortActive = !!(column.sortable && selectedColumn.id === column.id);
    var nativeSortIconLeft = column.sortable && !sortIcon && !column.right;
    var nativeSortIconRight = column.sortable && !sortIcon && column.right;
    var customSortIconLeft = column.sortable && sortIcon && !column.right;
    var customSortIconRight = column.sortable && sortIcon && column.right;
    return (React__namespace.createElement(TableColStyle$1, { className: "rdt_TableCol", head: true, allowOverflow: column.allowOverflow, button: column.button, compact: column.compact, grow: column.grow, hide: column.hide, maxWidth: column.maxWidth, minWidth: column.minWidth, right: column.right, center: column.center, width: column.width }, column.name && (React__namespace.createElement(ColumnSortable, { id: "column-" + column.id, role: "columnheader", tabIndex: 0, className: "rdt_TableCol_Sortable", onClick: !disabled ? handleSortChange : undefined, onKeyPress: !disabled ? handleKeyPress : undefined, sortActive: !disabled && sortActive, sortable: column.sortable, disabled: disabled },
        !disabled && customSortIconRight && renderCustomSortIcon(),
        !disabled && nativeSortIconRight && renderNativeSortIcon(sortActive),
        React__namespace.createElement(ColumnText, null, column.name),
        !disabled && customSortIconLeft && renderCustomSortIcon(),
        !disabled && nativeSortIconLeft && renderNativeSortIcon(sortActive)))));
}
var TableCol$1 = React__namespace.memo(TableCol);
var templateObject_1$c, templateObject_2$6, templateObject_3$4, templateObject_4$1;

var TableColStyle = styled__default['default'](CellBase)(templateObject_1$b || (templateObject_1$b = __makeTemplateObject(["\n\tflex: 0 0 48px;\n\tjustify-content: center;\n\talign-items: center;\n\tuser-select: none;\n\twhite-space: nowrap;\n"], ["\n\tflex: 0 0 48px;\n\tjustify-content: center;\n\talign-items: center;\n\tuser-select: none;\n\twhite-space: nowrap;\n"])));
function TableColCheckbox(_a) {
    var _b = _a.head, head = _b === void 0 ? true : _b, rowData = _a.rowData, keyField = _a.keyField, allSelected = _a.allSelected, mergeSelections = _a.mergeSelections, selectedRows = _a.selectedRows, selectableRowsComponent = _a.selectableRowsComponent, selectableRowsComponentProps = _a.selectableRowsComponentProps, selectableRowDisabled = _a.selectableRowDisabled, onSelectAllRows = _a.onSelectAllRows;
    var indeterminate = selectedRows.length > 0 && !allSelected;
    var rows = selectableRowDisabled ? rowData.filter(function (row) { return !selectableRowDisabled(row); }) : rowData;
    var isDisabled = rows.length === 0;
    var rowCount = Math.min(rowData.length, rows.length);
    var handleSelectAll = function () {
        onSelectAllRows({
            type: 'SELECT_ALL_ROWS',
            rows: rows,
            rowCount: rowCount,
            mergeSelections: mergeSelections,
            keyField: keyField,
        });
    };
    return (React__namespace.createElement(TableColStyle, { className: "rdt_TableCol", head: head, noPadding: true },
        React__namespace.createElement(Checkbox$1, { name: "select-all-rows", component: selectableRowsComponent, componentOptions: selectableRowsComponentProps, onClick: handleSelectAll, checked: allSelected, indeterminate: indeterminate, disabled: isDisabled })));
}
var templateObject_1$b;

var Title$1 = styled__default['default'].div(templateObject_1$a || (templateObject_1$a = __makeTemplateObject(["\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1 0 auto;\n\theight: 100%;\n\tcolor: ", ";\n\tfont-size: ", ";\n\tfont-weight: 400;\n"], ["\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1 0 auto;\n\theight: 100%;\n\tcolor: ", ";\n\tfont-size: ", ";\n\tfont-weight: 400;\n"])), function (_a) {
    var theme = _a.theme;
    return theme.contextMenu.fontColor;
}, function (_a) {
    var theme = _a.theme;
    return theme.contextMenu.fontSize;
});
var ContextActions = styled__default['default'].div(templateObject_2$5 || (templateObject_2$5 = __makeTemplateObject(["\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\tflex-wrap: wrap;\n"], ["\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\tflex-wrap: wrap;\n"])));
var ContextMenuStyle = styled__default['default'].div(templateObject_3$3 || (templateObject_3$3 = __makeTemplateObject(["\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbox-sizing: inherit;\n\tz-index: 1;\n\talign-items: center;\n\tjustify-content: space-between;\n\tdisplay: flex;\n\t", ";\n\t", ";\n"], ["\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbox-sizing: inherit;\n\tz-index: 1;\n\talign-items: center;\n\tjustify-content: space-between;\n\tdisplay: flex;\n\t", ";\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.contextMenu.style;
}, function (_a) {
    var theme = _a.theme, visible = _a.visible;
    return visible && theme.contextMenu.activeStyle;
});
var generateDefaultContextTitle = function (contextMessage, selectedCount, direction) {
    if (selectedCount === 0) {
        return null;
    }
    var datumName = selectedCount === 1 ? contextMessage.singular : contextMessage.plural;
    if (detectRTL(direction)) {
        return selectedCount + " " + (contextMessage.message || '') + " " + datumName;
    }
    return selectedCount + " " + datumName + " " + (contextMessage.message || '');
};
function ContextMenu(_a) {
    var contextMessage = _a.contextMessage, contextActions = _a.contextActions, contextComponent = _a.contextComponent, selectedCount = _a.selectedCount, direction = _a.direction;
    var visible = selectedCount > 0;
    if (contextComponent) {
        return (React__namespace.createElement(ContextMenuStyle, { visible: visible }, React__namespace.cloneElement(contextComponent, { selectedCount: selectedCount })));
    }
    return (React__namespace.createElement(ContextMenuStyle, { visible: visible },
        React__namespace.createElement(Title$1, null, generateDefaultContextTitle(contextMessage, selectedCount, direction)),
        React__namespace.createElement(ContextActions, null, contextActions)));
}
var templateObject_1$a, templateObject_2$5, templateObject_3$3;

var TableHeaderStyle = styled__default['default'].div(templateObject_1$9 || (templateObject_1$9 = __makeTemplateObject(["\n\tposition: relative;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tflex-wrap: wrap;\n\t", "\n"], ["\n\tposition: relative;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tflex-wrap: wrap;\n\t", "\n"])), function (_a) {
    var theme = _a.theme;
    return theme.header.style;
});
var Title = styled__default['default'].div(templateObject_2$4 || (templateObject_2$4 = __makeTemplateObject(["\n\tflex: 1 0 auto;\n\tcolor: ", ";\n\tfont-size: ", ";\n\tfont-weight: 400;\n"], ["\n\tflex: 1 0 auto;\n\tcolor: ", ";\n\tfont-size: ", ";\n\tfont-weight: 400;\n"])), function (_a) {
    var theme = _a.theme;
    return theme.header.fontColor;
}, function (_a) {
    var theme = _a.theme;
    return theme.header.fontSize;
});
var Actions = styled__default['default'].div(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject(["\n\tflex: 1 0 auto;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\n\t> * {\n\t\tmargin-left: 5px;\n\t}\n"], ["\n\tflex: 1 0 auto;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\n\t> * {\n\t\tmargin-left: 5px;\n\t}\n"])));
var TableHeader = function (_a) {
    var title = _a.title, _b = _a.actions, actions = _b === void 0 ? null : _b, contextMessage = _a.contextMessage, contextActions = _a.contextActions, contextComponent = _a.contextComponent, selectedCount = _a.selectedCount, direction = _a.direction, _c = _a.showMenu, showMenu = _c === void 0 ? true : _c;
    return (React__namespace.createElement(TableHeaderStyle, { className: "rdt_TableHeader", role: "heading", "aria-level": 1 },
        React__namespace.createElement(Title, null, title),
        actions && React__namespace.createElement(Actions, null, actions),
        showMenu && (React__namespace.createElement(ContextMenu, { contextMessage: contextMessage, contextActions: contextActions, contextComponent: contextComponent, direction: direction, selectedCount: selectedCount }))));
};
var templateObject_1$9, templateObject_2$4, templateObject_3$2;

var alignMap = {
    left: 'flex-start',
    right: 'flex-end',
    center: 'center',
};
var SubheaderWrapper = styled__default['default'].header(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject(["\n\tposition: relative;\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tpadding: 4px 16px 4px 24px;\n\twidth: 100%;\n\tjustify-content: ", ";\n\tflex-wrap: ", ";\n\t", "\n"], ["\n\tposition: relative;\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tpadding: 4px 16px 4px 24px;\n\twidth: 100%;\n\tjustify-content: ", ";\n\tflex-wrap: ", ";\n\t", "\n"])), function (_a) {
    var align = _a.align;
    return alignMap[align];
}, function (_a) {
    var wrapContent = _a.wrapContent;
    return (wrapContent ? 'wrap' : 'nowrap');
}, function (_a) {
    var theme = _a.theme;
    return theme.subHeader.style;
});
var TableSubheader = function (_a) {
    var _b = _a.align, align = _b === void 0 ? 'right' : _b, _c = _a.wrapContent, wrapContent = _c === void 0 ? true : _c, rest = __rest(_a, ["align", "wrapContent"]);
    return (React__namespace.createElement(SubheaderWrapper, __assign({ align: align, wrapContent: wrapContent }, rest)));
};
var templateObject_1$8;

var TableBody = styled__default['default'].div(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject(["\n\tdisplay: flex;\n\tflex-direction: column;\n\t", ";\n"], ["\n\tdisplay: flex;\n\tflex-direction: column;\n\t",
    ";\n"])), function (_a) {
    var _b = _a.fixedHeader, fixedHeader = _b === void 0 ? false : _b, _c = _a.hasOffset, hasOffset = _c === void 0 ? false : _c, _d = _a.offset, offset = _d === void 0 ? 0 : _d, _e = _a.fixedHeaderScrollHeight, fixedHeaderScrollHeight = _e === void 0 ? '100vh' : _e;
    return fixedHeader && styled.css(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject(["\n\t\t\tmax-height: ", ";\n\t\t\toverflow-y: auto;\n\t\t\t-webkit-overflow-scrolling: touch;\n\t\t"], ["\n\t\t\tmax-height: ", ";\n\t\t\toverflow-y: auto;\n\t\t\t-webkit-overflow-scrolling: touch;\n\t\t"])), hasOffset ? "calc(" + fixedHeaderScrollHeight + " - " + offset + ")" : fixedHeaderScrollHeight);
});
var templateObject_1$7, templateObject_2$3;

var ResponsiveWrapper = styled__default['default'].div(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject(["\n\tposition: relative;\n\twidth: 100%;\n\tborder-radius: inherit;\n\t", ";\n\t", ";\n"], ["\n\tposition: relative;\n\twidth: 100%;\n\tborder-radius: inherit;\n\t",
    ";\n\t",
    ";\n"])), function (_a) {
    var responsive = _a.responsive;
    return responsive && styled.css(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject(["\n\t\t\toverflow-x: auto;\n\n\t\t\t// prevents vertical scrolling in firefox\n\t\t\toverflow-y: hidden;\n\t\t\tmin-height: 0;\n\t\t"], ["\n\t\t\toverflow-x: auto;\n\n\t\t\t// prevents vertical scrolling in firefox\n\t\t\toverflow-y: hidden;\n\t\t\tmin-height: 0;\n\t\t"])));
}, function (_a) {
    var overflowY = _a.overflowY, overflowYOffset = _a.overflowYOffset, responsive = _a.responsive;
    return overflowY &&
        responsive &&
        overflowYOffset && styled.css(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject(["\n\t\t\tpadding-bottom: ", ";\n\t\t\tmargin-bottom: -", ";\n\t\t"], ["\n\t\t\tpadding-bottom: ", ";\n\t\t\tmargin-bottom: -", ";\n\t\t"])), overflowYOffset, overflowYOffset);
});
var templateObject_1$6, templateObject_2$2, templateObject_3$1;

var ProgressWrapper = styled__default['default'].div(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject(["\n\tposition: relative;\n\tbox-sizing: border-box;\n\twidth: 100%;\n\theight: 100%;\n\t", ";\n"], ["\n\tposition: relative;\n\tbox-sizing: border-box;\n\twidth: 100%;\n\theight: 100%;\n\t", ";\n"])), function (props) { return props.theme.progress.style; });
var templateObject_1$5;

var TableWrapper = styled__default['default'].div(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject(["\n\tposition: relative;\n\twidth: 100%;\n\t", ";\n"], ["\n\tposition: relative;\n\twidth: 100%;\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.tableWrapper.style;
});
var templateObject_1$4;

var TableColExpander = styled__default['default'](CellBase)(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject(["\n\twhite-space: nowrap;\n\t", ";\n"], ["\n\twhite-space: nowrap;\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.expanderCell.style;
});
var templateObject_1$3;

var NoDataWrapper = styled__default['default'].div(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject(["\n\tbox-sizing: border-box;\n\twidth: 100%;\n\theight: 100%;\n\t", ";\n"], ["\n\tbox-sizing: border-box;\n\twidth: 100%;\n\theight: 100%;\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.noData.style;
});
var templateObject_1$2;

var DropdownIcon = function () { return (React__default['default'].createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24" },
    React__default['default'].createElement("path", { d: "M7 10l5 5 5-5z" }),
    React__default['default'].createElement("path", { d: "M0 0h24v24H0z", fill: "none" }))); };

var SelectControl = styled__default['default'].select(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject(["\n\tcursor: pointer;\n\theight: 24px;\n\tmax-width: 100%;\n\tuser-select: none;\n\tpadding-left: 8px;\n\tpadding-right: 24px;\n\tbox-sizing: content-box;\n\tfont-size: inherit;\n\tcolor: inherit;\n\tborder: none;\n\tbackground-color: transparent;\n\tappearance: none;\n\tdirection: ltr;\n\tflex-shrink: 0;\n\n\t&::-ms-expand {\n\t\tdisplay: none;\n\t}\n\n\t&:disabled::-ms-expand {\n\t\tbackground: #f60;\n\t}\n\n\toption {\n\t\tcolor: initial;\n\t}\n"], ["\n\tcursor: pointer;\n\theight: 24px;\n\tmax-width: 100%;\n\tuser-select: none;\n\tpadding-left: 8px;\n\tpadding-right: 24px;\n\tbox-sizing: content-box;\n\tfont-size: inherit;\n\tcolor: inherit;\n\tborder: none;\n\tbackground-color: transparent;\n\tappearance: none;\n\tdirection: ltr;\n\tflex-shrink: 0;\n\n\t&::-ms-expand {\n\t\tdisplay: none;\n\t}\n\n\t&:disabled::-ms-expand {\n\t\tbackground: #f60;\n\t}\n\n\toption {\n\t\tcolor: initial;\n\t}\n"])));
var SelectWrapper = styled__default['default'].div(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject(["\n\tposition: relative;\n\tflex-shrink: 0;\n\tfont-size: inherit;\n\tcolor: inherit;\n\tmargin-top: 1px;\n\n\tsvg {\n\t\ttop: 0;\n\t\tright: 0;\n\t\tcolor: inherit;\n\t\tposition: absolute;\n\t\tfill: currentColor;\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tdisplay: inline-block;\n\t\tuser-select: none;\n\t\tpointer-events: none;\n\t}\n"], ["\n\tposition: relative;\n\tflex-shrink: 0;\n\tfont-size: inherit;\n\tcolor: inherit;\n\tmargin-top: 1px;\n\n\tsvg {\n\t\ttop: 0;\n\t\tright: 0;\n\t\tcolor: inherit;\n\t\tposition: absolute;\n\t\tfill: currentColor;\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tdisplay: inline-block;\n\t\tuser-select: none;\n\t\tpointer-events: none;\n\t}\n"])));
var Select = function (_a) {
    var defaultValue = _a.defaultValue, onChange = _a.onChange, rest = __rest(_a, ["defaultValue", "onChange"]);
    return (React__namespace.createElement(SelectWrapper, null,
        React__namespace.createElement(SelectControl, __assign({ onChange: onChange, defaultValue: defaultValue }, rest)),
        React__namespace.createElement(DropdownIcon, null)));
};
var templateObject_1$1, templateObject_2$1;

var useWindowSize = function () {
    var isClient = typeof window === 'object';
    function getSize() {
        return {
            width: isClient ? window.innerWidth : undefined,
            height: isClient ? window.innerHeight : undefined,
        };
    }
    var _a = React__namespace.useState(getSize), windowSize = _a[0], setWindowSize = _a[1];
    React__namespace.useEffect(function () {
        if (!isClient) {
            return function () { return null; };
        }
        function handleResize() {
            setWindowSize(getSize());
        }
        window.addEventListener('resize', handleResize);
        return function () { return window.removeEventListener('resize', handleResize); };
    }, []);
    return windowSize;
};

var FirstPage = function () { return (React__default['default'].createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", "aria-hidden": "true", role: "presentation" },
    React__default['default'].createElement("path", { d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z" }),
    React__default['default'].createElement("path", { fill: "none", d: "M24 24H0V0h24v24z" }))); };

var LastPage = function () { return (React__default['default'].createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", "aria-hidden": "true", role: "presentation" },
    React__default['default'].createElement("path", { d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z" }),
    React__default['default'].createElement("path", { fill: "none", d: "M0 0h24v24H0V0z" }))); };

var Left = function () { return (React__default['default'].createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", "aria-hidden": "true", role: "presentation" },
    React__default['default'].createElement("path", { d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" }),
    React__default['default'].createElement("path", { d: "M0 0h24v24H0z", fill: "none" }))); };

var Right = function () { return (React__default['default'].createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", "aria-hidden": "true", role: "presentation" },
    React__default['default'].createElement("path", { d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" }),
    React__default['default'].createElement("path", { d: "M0 0h24v24H0z", fill: "none" }))); };

var ExpanderCollapsedIcon = function () { return (React__default['default'].createElement("svg", { fill: "currentColor", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    React__default['default'].createElement("path", { d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z" }),
    React__default['default'].createElement("path", { d: "M0-.25h24v24H0z", fill: "none" }))); };

var ExpanderExpandedIcon = function () { return (React__default['default'].createElement("svg", { fill: "currentColor", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    React__default['default'].createElement("path", { d: "M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z" }),
    React__default['default'].createElement("path", { d: "M0-.75h24v24H0z", fill: "none" }))); };

var defaultProps = {
    columns: [],
    data: [],
    title: '',
    keyField: 'id',
    selectableRows: false,
    selectableRowsHighlight: false,
    selectableRowsNoSelectAll: false,
    selectableRowSelected: null,
    selectableRowDisabled: null,
    selectableRowsComponent: 'input',
    selectableRowsComponentProps: {},
    selectableRowsVisibleOnly: false,
    selectableRowsSingle: false,
    clearSelectedRows: false,
    expandableRows: false,
    expandableRowDisabled: null,
    expandableRowExpanded: null,
    expandOnRowClicked: false,
    expandableRowsHideExpander: false,
    expandOnRowDoubleClicked: false,
    expandableInheritConditionalStyles: false,
    expandableRowsComponent: function DefaultExpander() {
        return (React__default['default'].createElement("div", null,
            "To add an expander pass in a component instance via ",
            React__default['default'].createElement("strong", null, "expandableRowsComponent"),
            ". You can then access props.data from this component."));
    },
    expandableIcon: {
        collapsed: React__default['default'].createElement(ExpanderCollapsedIcon, null),
        expanded: React__default['default'].createElement(ExpanderExpandedIcon, null),
    },
    expandableRowsComponentProps: {},
    progressPending: false,
    progressComponent: React__default['default'].createElement("div", { style: { fontSize: '24px', fontWeight: 700, padding: '24px' } }, "Loading..."),
    persistTableHead: false,
    sortIcon: null,
    sortFunction: null,
    sortServer: false,
    striped: false,
    highlightOnHover: false,
    pointerOnHover: false,
    noContextMenu: false,
    contextMessage: { singular: 'item', plural: 'items', message: 'selected' },
    actions: null,
    contextActions: null,
    contextComponent: null,
    defaultSortFieldId: null,
    defaultSortAsc: true,
    responsive: true,
    overflowY: false,
    overflowYOffset: '250px',
    noDataComponent: React__default['default'].createElement("div", { style: { padding: '24px' } }, "There are no records to display"),
    disabled: false,
    noTableHead: false,
    noHeader: false,
    subHeader: false,
    subHeaderAlign: exports.Alignment.Right,
    subHeaderWrap: true,
    subHeaderComponent: null,
    fixedHeader: false,
    fixedHeaderScrollHeight: '100vh',
    pagination: false,
    paginationServer: false,
    paginationServerOptions: {
        persistSelectedOnSort: false,
        persistSelectedOnPageChange: false,
    },
    paginationDefaultPage: 1,
    paginationResetDefaultPage: false,
    paginationTotalRows: 0,
    paginationPerPage: 10,
    paginationRowsPerPageOptions: [10, 15, 20, 25, 30],
    paginationComponent: null,
    paginationComponentOptions: {},
    paginationIconFirstPage: React__default['default'].createElement(FirstPage, null),
    paginationIconLastPage: React__default['default'].createElement(LastPage, null),
    paginationIconNext: React__default['default'].createElement(Right, null),
    paginationIconPrevious: React__default['default'].createElement(Left, null),
    dense: false,
    conditionalRowStyles: [],
    theme: 'default',
    customStyles: {},
    direction: exports.Direction.AUTO,
    onChangePage: noop,
    onChangeRowsPerPage: noop,
    onRowClicked: noop,
    onRowDoubleClicked: noop,
    onRowExpandToggled: noop,
    onSelectedRowsChange: noop,
    onSort: noop,
};

var defaultComponentOptions = {
    rowsPerPageText: 'Rows per page:',
    rangeSeparatorText: 'of',
    noRowsPerPage: false,
    selectAllRowsItem: false,
    selectAllRowsItemText: 'All',
};
var PaginationWrapper = styled__default['default'].nav(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tpadding-right: 8px;\n\tpadding-left: 8px;\n\twidth: 100%;\n\t", ";\n"], ["\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tpadding-right: 8px;\n\tpadding-left: 8px;\n\twidth: 100%;\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.pagination.style;
});
var Button = styled__default['default'].button(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n\tposition: relative;\n\tdisplay: block;\n\tuser-select: none;\n\tborder: none;\n\t", ";\n\t", ";\n"], ["\n\tposition: relative;\n\tdisplay: block;\n\tuser-select: none;\n\tborder: none;\n\t", ";\n\t", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.pagination.pageButtonsStyle;
}, function (_a) {
    var isRTL = _a.isRTL;
    return isRTL && 'transform: scale(-1, -1)';
});
var PageList = styled__default['default'].div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n\tdisplay: flex;\n\talign-items: center;\n\tborder-radius: 4px;\n\twhite-space: nowrap;\n\t", ";\n"], ["\n\tdisplay: flex;\n\talign-items: center;\n\tborder-radius: 4px;\n\twhite-space: nowrap;\n\t",
    ";\n"])), media.sm(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    width: 100%;\n    justify-content: space-around;\n  "], ["\n    width: 100%;\n    justify-content: space-around;\n  "]))));
var Span = styled__default['default'].span(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n\tflex-shrink: 1;\n\tuser-select: none;\n"], ["\n\tflex-shrink: 1;\n\tuser-select: none;\n"])));
var Range = styled__default['default'](Span)(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n\tmargin: 0 24px;\n"], ["\n\tmargin: 0 24px;\n"])));
var RowLabel = styled__default['default'](Span)(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n\tmargin: 0 4px;\n"], ["\n\tmargin: 0 4px;\n"])));
function Pagination(_a) {
    var rowsPerPage = _a.rowsPerPage, rowCount = _a.rowCount, currentPage = _a.currentPage, _b = _a.direction, direction = _b === void 0 ? defaultProps.direction : _b, _c = _a.paginationRowsPerPageOptions, paginationRowsPerPageOptions = _c === void 0 ? defaultProps.paginationRowsPerPageOptions : _c, _d = _a.paginationIconLastPage, paginationIconLastPage = _d === void 0 ? defaultProps.paginationIconLastPage : _d, _e = _a.paginationIconFirstPage, paginationIconFirstPage = _e === void 0 ? defaultProps.paginationIconFirstPage : _e, _f = _a.paginationIconNext, paginationIconNext = _f === void 0 ? defaultProps.paginationIconNext : _f, _g = _a.paginationIconPrevious, paginationIconPrevious = _g === void 0 ? defaultProps.paginationIconPrevious : _g, _h = _a.paginationComponentOptions, paginationComponentOptions = _h === void 0 ? defaultProps.paginationComponentOptions : _h, _j = _a.onChangeRowsPerPage, onChangeRowsPerPage = _j === void 0 ? defaultProps.onChangeRowsPerPage : _j, _k = _a.onChangePage, onChangePage = _k === void 0 ? defaultProps.onChangePage : _k;
    var windowSize = useWindowSize();
    var shouldShow = windowSize.width && windowSize.width > SMALL;
    var isRTL = detectRTL(direction);
    var numPages = getNumberOfPages(rowCount, rowsPerPage);
    var lastIndex = currentPage * rowsPerPage;
    var firstIndex = lastIndex - rowsPerPage + 1;
    var disabledLesser = currentPage === 1;
    var disabledGreater = currentPage === numPages;
    var options = __assign(__assign({}, defaultComponentOptions), paginationComponentOptions);
    var range = currentPage === numPages
        ? firstIndex + "-" + rowCount + " " + options.rangeSeparatorText + " " + rowCount
        : firstIndex + "-" + lastIndex + " " + options.rangeSeparatorText + " " + rowCount;
    var handlePrevious = React__namespace.useCallback(function () { return onChangePage(currentPage - 1); }, [currentPage, onChangePage]);
    var handleNext = React__namespace.useCallback(function () { return onChangePage(currentPage + 1); }, [currentPage, onChangePage]);
    var handleFirst = React__namespace.useCallback(function () { return onChangePage(1); }, [onChangePage]);
    var handleLast = React__namespace.useCallback(function () { return onChangePage(getNumberOfPages(rowCount, rowsPerPage)); }, [onChangePage, rowCount, rowsPerPage]);
    var handleRowsPerPage = React__namespace.useCallback(function (e) { return onChangeRowsPerPage(Number(e.target.value), currentPage); }, [currentPage, onChangeRowsPerPage]);
    var selectOptions = paginationRowsPerPageOptions.map(function (num) { return (React__namespace.createElement("option", { key: num, value: num }, num)); });
    if (options.selectAllRowsItem) {
        selectOptions.push(React__namespace.createElement("option", { key: -1, value: rowCount }, options.selectAllRowsItemText));
    }
    var select = (React__namespace.createElement(Select, { onChange: handleRowsPerPage, defaultValue: rowsPerPage, "aria-label": options.rowsPerPageText }, selectOptions));
    return (React__namespace.createElement(PaginationWrapper, { className: "rdt_Pagination" },
        !options.noRowsPerPage && shouldShow && (React__namespace.createElement(React__namespace.Fragment, null,
            React__namespace.createElement(RowLabel, null, options.rowsPerPageText),
            select)),
        shouldShow && React__namespace.createElement(Range, null, range),
        React__namespace.createElement(PageList, null,
            React__namespace.createElement(Button, { id: "pagination-first-page", type: "button", "aria-label": "First Page", "aria-disabled": disabledLesser, onClick: handleFirst, disabled: disabledLesser, isRTL: isRTL }, paginationIconFirstPage),
            React__namespace.createElement(Button, { id: "pagination-previous-page", type: "button", "aria-label": "Previous Page", "aria-disabled": disabledLesser, onClick: handlePrevious, disabled: disabledLesser, isRTL: isRTL }, paginationIconPrevious),
            !shouldShow && select,
            React__namespace.createElement(Button, { id: "pagination-next-page", type: "button", "aria-label": "Next Page", "aria-disabled": disabledGreater, onClick: handleNext, disabled: disabledGreater, isRTL: isRTL }, paginationIconNext),
            React__namespace.createElement(Button, { id: "pagination-last-page", type: "button", "aria-label": "Last Page", "aria-disabled": disabledGreater, onClick: handleLast, disabled: disabledGreater, isRTL: isRTL }, paginationIconLastPage))));
}
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;

var useFirstUpdate = function (fn, inputs) {
    var firstUpdate = React__namespace.useRef(true);
    React__namespace.useEffect(function () {
        if (firstUpdate.current) {
            firstUpdate.current = false;
            return;
        }
        fn();
    }, inputs);
};

var isMergeableObject = function isMergeableObject(value) {
	return isNonNullObject(value)
		&& !isSpecial(value)
};

function isNonNullObject(value) {
	return !!value && typeof value === 'object'
}

function isSpecial(value) {
	var stringValue = Object.prototype.toString.call(value);

	return stringValue === '[object RegExp]'
		|| stringValue === '[object Date]'
		|| isReactElement(value)
}

// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

function isReactElement(value) {
	return value.$$typeof === REACT_ELEMENT_TYPE
}

function emptyTarget(val) {
	return Array.isArray(val) ? [] : {}
}

function cloneUnlessOtherwiseSpecified(value, options) {
	return (options.clone !== false && options.isMergeableObject(value))
		? deepmerge(emptyTarget(value), value, options)
		: value
}

function defaultArrayMerge(target, source, options) {
	return target.concat(source).map(function(element) {
		return cloneUnlessOtherwiseSpecified(element, options)
	})
}

function getMergeFunction(key, options) {
	if (!options.customMerge) {
		return deepmerge
	}
	var customMerge = options.customMerge(key);
	return typeof customMerge === 'function' ? customMerge : deepmerge
}

function getEnumerableOwnPropertySymbols(target) {
	return Object.getOwnPropertySymbols
		? Object.getOwnPropertySymbols(target).filter(function(symbol) {
			return target.propertyIsEnumerable(symbol)
		})
		: []
}

function getKeys(target) {
	return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))
}

function propertyIsOnObject(object, property) {
	try {
		return property in object
	} catch(_) {
		return false
	}
}

// Protects from prototype poisoning and unexpected merging up the prototype chain.
function propertyIsUnsafe(target, key) {
	return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
		&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
			&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.
}

function mergeObject(target, source, options) {
	var destination = {};
	if (options.isMergeableObject(target)) {
		getKeys(target).forEach(function(key) {
			destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
		});
	}
	getKeys(source).forEach(function(key) {
		if (propertyIsUnsafe(target, key)) {
			return
		}

		if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
			destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
		} else {
			destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
		}
	});
	return destination
}

function deepmerge(target, source, options) {
	options = options || {};
	options.arrayMerge = options.arrayMerge || defaultArrayMerge;
	options.isMergeableObject = options.isMergeableObject || isMergeableObject;
	// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
	// implementations can use it. The caller may not replace it.
	options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;

	var sourceIsArray = Array.isArray(source);
	var targetIsArray = Array.isArray(target);
	var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

	if (!sourceAndTargetTypesMatch) {
		return cloneUnlessOtherwiseSpecified(source, options)
	} else if (sourceIsArray) {
		return options.arrayMerge(target, source, options)
	} else {
		return mergeObject(target, source, options)
	}
}

deepmerge.all = function deepmergeAll(array, options) {
	if (!Array.isArray(array)) {
		throw new Error('first argument should be an array')
	}

	return array.reduce(function(prev, next) {
		return deepmerge(prev, next, options)
	}, {})
};

var deepmerge_1 = deepmerge;

var cjs = deepmerge_1;

var defaultThemes = {
    default: {
        text: {
            primary: 'rgba(0, 0, 0, 0.87)',
            secondary: 'rgba(0, 0, 0, 0.54)',
            disabled: 'rgba(0, 0, 0, 0.38)',
        },
        background: {
            default: '#FFFFFF',
        },
        context: {
            background: '#e3f2fd',
            text: 'rgba(0, 0, 0, 0.87)',
        },
        divider: {
            default: 'rgba(0,0,0,.12)',
        },
        button: {
            default: 'rgba(0,0,0,.54)',
            focus: 'rgba(0,0,0,.12)',
            hover: 'rgba(0,0,0,.12)',
            disabled: 'rgba(0, 0, 0, .18)',
        },
        sortFocus: {
            default: 'rgba(0, 0, 0, .54)',
        },
        selected: {
            default: '#e3f2fd',
            text: 'rgba(0, 0, 0, 0.87)',
        },
        highlightOnHover: {
            default: '#EEEEEE',
            text: 'rgba(0, 0, 0, 0.87)',
        },
        striped: {
            default: '#FAFAFA',
            text: 'rgba(0, 0, 0, 0.87)',
        },
    },
    dark: {
        text: {
            primary: '#FFFFFF',
            secondary: 'rgba(255, 255, 255, 0.7)',
            disabled: 'rgba(0,0,0,.12)',
        },
        background: {
            default: '#424242',
        },
        context: {
            background: '#E91E63',
            text: '#FFFFFF',
        },
        divider: {
            default: 'rgba(81, 81, 81, 1)',
        },
        button: {
            default: '#FFFFFF',
            focus: 'rgba(255, 255, 255, .54)',
            hover: 'rgba(255, 255, 255, .12)',
            disabled: 'rgba(255, 255, 255, .18)',
        },
        sortFocus: {
            default: 'rgba(255, 255, 255, .54)',
        },
        selected: {
            default: 'rgba(0, 0, 0, .7)',
            text: '#FFFFFF',
        },
        highlightOnHover: {
            default: 'rgba(0, 0, 0, .7)',
            text: '#FFFFFF',
        },
        striped: {
            default: 'rgba(0, 0, 0, .87)',
            text: '#FFFFFF',
        },
    },
};
function createTheme(name, customTheme) {
    if (name === void 0) { name = 'default'; }
    defaultThemes[name] = cjs(defaultThemes.default, customTheme || {});
    return defaultThemes[name];
}

var defaultStyles = function (theme) { return ({
    table: {
        style: {
            color: theme.text.primary,
            backgroundColor: theme.background.default,
        },
    },
    tableWrapper: {
        style: {
            display: 'table',
        },
    },
    header: {
        style: {
            fontSize: '22px',
            color: theme.text.primary,
            backgroundColor: theme.background.default,
            minHeight: '56px',
            paddingLeft: '16px',
            paddingRight: '8px',
        },
    },
    subHeader: {
        style: {
            backgroundColor: theme.background.default,
            minHeight: '52px',
        },
    },
    head: {
        style: {},
    },
    headRow: {
        style: {
            backgroundColor: theme.background.default,
            minHeight: '56px',
            borderBottomWidth: '1px',
            borderBottomColor: theme.divider.default,
            borderBottomStyle: 'solid',
        },
        denseStyle: {
            minHeight: '32px',
        },
    },
    headCells: {
        style: {
            fontSize: '12px',
            fontWeight: 500,
            color: theme.text.primary,
            paddingLeft: '16px',
            paddingRight: '16px',
        },
        activeSortStyle: {
            color: theme.text.primary,
            '&:focus': {
                outline: 'none',
            },
            '&:hover:not(:focus)': {
                color: theme.sortFocus.default,
            },
        },
        inactiveSortStyle: {
            '&:focus': {
                outline: 'none',
                color: theme.sortFocus.default,
            },
            '&:hover': {
                color: theme.sortFocus.default,
            },
        },
    },
    contextMenu: {
        style: {
            backgroundColor: theme.context.background,
            fontSize: '18px',
            fontWeight: 400,
            color: theme.context.text,
            paddingLeft: '16px',
            paddingRight: '8px',
            transform: 'translate3d(0, -100%, 0)',
            transitionDuration: '125ms',
            transitionTimingFunction: 'cubic-bezier(0, 0, 0.2, 1)',
            willChange: 'transform',
        },
        activeStyle: {
            transform: 'translate3d(0, 0, 0)',
        },
    },
    cells: {
        style: {
            paddingLeft: '16px',
            paddingRight: '16px',
            wordBreak: 'break-word',
        },
    },
    rows: {
        style: {
            fontSize: '13px',
            color: theme.text.primary,
            backgroundColor: theme.background.default,
            minHeight: '48px',
            '&:not(:last-of-type)': {
                borderBottomStyle: 'solid',
                borderBottomWidth: '1px',
                borderBottomColor: theme.divider.default,
            },
        },
        denseStyle: {
            minHeight: '32px',
        },
        selectedHighlightStyle: {
            '&:nth-of-type(n)': {
                color: theme.selected.text,
                backgroundColor: theme.selected.default,
                borderBottomColor: theme.background.default,
            },
        },
        highlightOnHoverStyle: {
            color: theme.highlightOnHover.text,
            backgroundColor: theme.highlightOnHover.default,
            transitionDuration: '0.15s',
            transitionProperty: 'background-color',
            borderBottomColor: theme.background.default,
            outlineStyle: 'solid',
            outlineWidth: '1px',
            outlineColor: theme.background.default,
        },
        stripedStyle: {
            color: theme.striped.text,
            backgroundColor: theme.striped.default,
        },
    },
    expanderRow: {
        style: {
            color: theme.text.primary,
            backgroundColor: theme.background.default,
        },
    },
    expanderCell: {
        style: {
            flex: '0 0 48px',
        },
    },
    expanderButton: {
        style: {
            color: theme.button.default,
            fill: theme.button.default,
            backgroundColor: 'transparent',
            borderRadius: '2px',
            transition: '0.25s',
            height: '100%',
            width: '100%',
            '&:hover:enabled': {
                cursor: 'pointer',
            },
            '&:disabled': {
                color: theme.button.disabled,
            },
            '&:hover:not(:disabled)': {
                cursor: 'pointer',
                backgroundColor: theme.button.hover,
            },
            '&:focus': {
                outline: 'none',
                backgroundColor: theme.button.focus,
            },
            svg: {
                margin: 'auto',
            },
        },
    },
    pagination: {
        style: {
            color: theme.text.secondary,
            fontSize: '13px',
            minHeight: '56px',
            backgroundColor: theme.background.default,
            borderTopStyle: 'solid',
            borderTopWidth: '1px',
            borderTopColor: theme.divider.default,
        },
        pageButtonsStyle: {
            borderRadius: '50%',
            height: '40px',
            width: '40px',
            padding: '8px',
            margin: 'px',
            cursor: 'pointer',
            transition: '0.4s',
            color: theme.button.default,
            fill: theme.button.default,
            backgroundColor: 'transparent',
            '&:disabled': {
                cursor: 'unset',
                color: theme.button.disabled,
                fill: theme.button.disabled,
            },
            '&:hover:not(:disabled)': {
                backgroundColor: theme.button.hover,
            },
            '&:focus': {
                outline: 'none',
                backgroundColor: theme.button.focus,
            },
        },
    },
    noData: {
        style: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            color: theme.text.primary,
            backgroundColor: theme.background.default,
        },
    },
    progress: {
        style: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            color: theme.text.primary,
            backgroundColor: theme.background.default,
        },
    },
}); };
var createStyles = function (customStyles, themeName) {
    if (customStyles === void 0) { customStyles = {}; }
    if (themeName === void 0) { themeName = 'default'; }
    var themeType = defaultThemes[themeName] ? themeName : 'default';
    return cjs(defaultStyles(defaultThemes[themeType]), customStyles);
};

function DataTable(props) {
    var _a = props.data, data = _a === void 0 ? defaultProps.data : _a, _b = props.columns, columns = _b === void 0 ? defaultProps.columns : _b, _c = props.title, title = _c === void 0 ? defaultProps.title : _c, _d = props.actions, actions = _d === void 0 ? defaultProps.actions : _d, _e = props.keyField, keyField = _e === void 0 ? defaultProps.keyField : _e, _f = props.striped, striped = _f === void 0 ? defaultProps.striped : _f, _g = props.highlightOnHover, highlightOnHover = _g === void 0 ? defaultProps.highlightOnHover : _g, _h = props.pointerOnHover, pointerOnHover = _h === void 0 ? defaultProps.pointerOnHover : _h, _j = props.dense, dense = _j === void 0 ? defaultProps.dense : _j, _k = props.selectableRows, selectableRows = _k === void 0 ? defaultProps.selectableRows : _k, _l = props.selectableRowsSingle, selectableRowsSingle = _l === void 0 ? defaultProps.selectableRowsSingle : _l, _m = props.selectableRowsHighlight, selectableRowsHighlight = _m === void 0 ? defaultProps.selectableRowsHighlight : _m, _o = props.selectableRowsNoSelectAll, selectableRowsNoSelectAll = _o === void 0 ? defaultProps.selectableRowsNoSelectAll : _o, _p = props.selectableRowsVisibleOnly, selectableRowsVisibleOnly = _p === void 0 ? defaultProps.selectableRowsVisibleOnly : _p, _q = props.selectableRowSelected, selectableRowSelected = _q === void 0 ? defaultProps.selectableRowSelected : _q, _r = props.selectableRowDisabled, selectableRowDisabled = _r === void 0 ? defaultProps.selectableRowDisabled : _r, _s = props.selectableRowsComponent, selectableRowsComponent = _s === void 0 ? defaultProps.selectableRowsComponent : _s, _t = props.selectableRowsComponentProps, selectableRowsComponentProps = _t === void 0 ? defaultProps.selectableRowsComponentProps : _t, _u = props.onRowExpandToggled, onRowExpandToggled = _u === void 0 ? defaultProps.onRowExpandToggled : _u, _v = props.onSelectedRowsChange, onSelectedRowsChange = _v === void 0 ? defaultProps.onSelectedRowsChange : _v, _w = props.expandableIcon, expandableIcon = _w === void 0 ? defaultProps.expandableIcon : _w, _x = props.onChangeRowsPerPage, onChangeRowsPerPage = _x === void 0 ? defaultProps.onChangeRowsPerPage : _x, _y = props.onChangePage, onChangePage = _y === void 0 ? defaultProps.onChangePage : _y, _z = props.paginationServer, paginationServer = _z === void 0 ? defaultProps.paginationServer : _z, _0 = props.paginationServerOptions, paginationServerOptions = _0 === void 0 ? defaultProps.paginationServerOptions : _0, _1 = props.paginationTotalRows, paginationTotalRows = _1 === void 0 ? defaultProps.paginationTotalRows : _1, _2 = props.paginationDefaultPage, paginationDefaultPage = _2 === void 0 ? defaultProps.paginationDefaultPage : _2, _3 = props.paginationResetDefaultPage, paginationResetDefaultPage = _3 === void 0 ? defaultProps.paginationResetDefaultPage : _3, _4 = props.paginationPerPage, paginationPerPage = _4 === void 0 ? defaultProps.paginationPerPage : _4, _5 = props.paginationRowsPerPageOptions, paginationRowsPerPageOptions = _5 === void 0 ? defaultProps.paginationRowsPerPageOptions : _5, _6 = props.paginationIconLastPage, paginationIconLastPage = _6 === void 0 ? defaultProps.paginationIconLastPage : _6, _7 = props.paginationIconFirstPage, paginationIconFirstPage = _7 === void 0 ? defaultProps.paginationIconFirstPage : _7, _8 = props.paginationIconNext, paginationIconNext = _8 === void 0 ? defaultProps.paginationIconNext : _8, _9 = props.paginationIconPrevious, paginationIconPrevious = _9 === void 0 ? defaultProps.paginationIconPrevious : _9, _10 = props.paginationComponent, paginationComponent = _10 === void 0 ? defaultProps.paginationComponent : _10, _11 = props.paginationComponentOptions, paginationComponentOptions = _11 === void 0 ? defaultProps.paginationComponentOptions : _11, _12 = props.responsive, responsive = _12 === void 0 ? defaultProps.responsive : _12, _13 = props.overflowY, overflowY = _13 === void 0 ? defaultProps.overflowY : _13, _14 = props.overflowYOffset, overflowYOffset = _14 === void 0 ? defaultProps.overflowYOffset : _14, _15 = props.progressPending, progressPending = _15 === void 0 ? defaultProps.progressPending : _15, _16 = props.progressComponent, progressComponent = _16 === void 0 ? defaultProps.progressComponent : _16, _17 = props.persistTableHead, persistTableHead = _17 === void 0 ? defaultProps.persistTableHead : _17, _18 = props.noDataComponent, noDataComponent = _18 === void 0 ? defaultProps.noDataComponent : _18, _19 = props.disabled, disabled = _19 === void 0 ? defaultProps.disabled : _19, _20 = props.noTableHead, noTableHead = _20 === void 0 ? defaultProps.noTableHead : _20, _21 = props.noHeader, noHeader = _21 === void 0 ? defaultProps.noHeader : _21, _22 = props.fixedHeader, fixedHeader = _22 === void 0 ? defaultProps.fixedHeader : _22, _23 = props.fixedHeaderScrollHeight, fixedHeaderScrollHeight = _23 === void 0 ? defaultProps.fixedHeaderScrollHeight : _23, _24 = props.pagination, pagination = _24 === void 0 ? defaultProps.pagination : _24, _25 = props.subHeader, subHeader = _25 === void 0 ? defaultProps.subHeader : _25, _26 = props.subHeaderAlign, subHeaderAlign = _26 === void 0 ? defaultProps.subHeaderAlign : _26, _27 = props.subHeaderWrap, subHeaderWrap = _27 === void 0 ? defaultProps.subHeaderWrap : _27, _28 = props.subHeaderComponent, subHeaderComponent = _28 === void 0 ? defaultProps.subHeaderComponent : _28, _29 = props.noContextMenu, noContextMenu = _29 === void 0 ? defaultProps.noContextMenu : _29, _30 = props.contextMessage, contextMessage = _30 === void 0 ? defaultProps.contextMessage : _30, _31 = props.contextActions, contextActions = _31 === void 0 ? defaultProps.contextActions : _31, _32 = props.contextComponent, contextComponent = _32 === void 0 ? defaultProps.contextComponent : _32, _33 = props.expandableRows, expandableRows = _33 === void 0 ? defaultProps.expandableRows : _33, _34 = props.onRowClicked, onRowClicked = _34 === void 0 ? defaultProps.onRowClicked : _34, _35 = props.onRowDoubleClicked, onRowDoubleClicked = _35 === void 0 ? defaultProps.onRowDoubleClicked : _35, _36 = props.sortIcon, sortIcon = _36 === void 0 ? defaultProps.sortIcon : _36, _37 = props.onSort, onSort = _37 === void 0 ? defaultProps.onSort : _37, _38 = props.sortFunction, sortFunction = _38 === void 0 ? defaultProps.sortFunction : _38, _39 = props.sortServer, sortServer = _39 === void 0 ? defaultProps.sortServer : _39, _40 = props.expandableRowsComponent, expandableRowsComponent = _40 === void 0 ? defaultProps.expandableRowsComponent : _40, _41 = props.expandableRowsComponentProps, expandableRowsComponentProps = _41 === void 0 ? defaultProps.expandableRowsComponentProps : _41, _42 = props.expandableRowDisabled, expandableRowDisabled = _42 === void 0 ? defaultProps.expandableRowDisabled : _42, _43 = props.expandableRowsHideExpander, expandableRowsHideExpander = _43 === void 0 ? defaultProps.expandableRowsHideExpander : _43, _44 = props.expandOnRowClicked, expandOnRowClicked = _44 === void 0 ? defaultProps.expandOnRowClicked : _44, _45 = props.expandOnRowDoubleClicked, expandOnRowDoubleClicked = _45 === void 0 ? defaultProps.expandOnRowDoubleClicked : _45, _46 = props.expandableRowExpanded, expandableRowExpanded = _46 === void 0 ? defaultProps.expandableRowExpanded : _46, _47 = props.expandableInheritConditionalStyles, expandableInheritConditionalStyles = _47 === void 0 ? defaultProps.expandableInheritConditionalStyles : _47, _48 = props.defaultSortFieldId, defaultSortFieldId = _48 === void 0 ? defaultProps.defaultSortFieldId : _48, _49 = props.defaultSortAsc, defaultSortAsc = _49 === void 0 ? defaultProps.defaultSortAsc : _49, _50 = props.clearSelectedRows, clearSelectedRows = _50 === void 0 ? defaultProps.clearSelectedRows : _50, _51 = props.conditionalRowStyles, conditionalRowStyles = _51 === void 0 ? defaultProps.conditionalRowStyles : _51, _52 = props.theme, theme = _52 === void 0 ? defaultProps.theme : _52, _53 = props.customStyles, customStyles = _53 === void 0 ? defaultProps.customStyles : _53, _54 = props.direction, direction = _54 === void 0 ? defaultProps.direction : _54;
    var columnsMemo = React__namespace.useMemo(function () { return decorateColumns(columns); }, [columns]);
    var defaultSortDirection = getSortDirection(defaultSortAsc);
    var defaultSortColumn = React__namespace.useMemo(function () { return getColumnById(defaultSortFieldId, columnsMemo) || {}; }, [columnsMemo, defaultSortFieldId]);
    var initialState = React__namespace.useMemo(function () { return ({
        allSelected: false,
        rows: setRowData(data, defaultSortColumn === null || defaultSortColumn === void 0 ? void 0 : defaultSortColumn.selector, defaultSortDirection, sortServer, sortFunction),
        selectedCount: 0,
        selectedRows: [],
        selectedColumn: defaultSortColumn,
        toggleOnSelectedRowsChange: false,
        sortDirection: defaultSortDirection,
        currentPage: paginationDefaultPage,
        rowsPerPage: paginationPerPage,
        selectedRowsFlag: false,
        contextMessage: defaultProps.contextMessage,
    }); }, []);
    var _55 = React__namespace.useReducer(tableReducer, initialState), _56 = _55[0], rowsPerPage = _56.rowsPerPage, rows = _56.rows, currentPage = _56.currentPage, selectedRows = _56.selectedRows, allSelected = _56.allSelected, selectedCount = _56.selectedCount, selectedColumn = _56.selectedColumn, sortDirection = _56.sortDirection, toggleOnSelectedRowsChange = _56.toggleOnSelectedRowsChange, dispatch = _55[1];
    var _57 = paginationServerOptions.persistSelectedOnSort, persistSelectedOnSort = _57 === void 0 ? false : _57, _58 = paginationServerOptions.persistSelectedOnPageChange, persistSelectedOnPageChange = _58 === void 0 ? false : _58;
    var mergeSelections = !!(paginationServer && (persistSelectedOnPageChange || persistSelectedOnSort));
    var enabledPagination = pagination && !progressPending && data.length > 0;
    var Pagination$1 = paginationComponent || Pagination;
    var currentTheme = React__namespace.useMemo(function () { return createStyles(customStyles, theme); }, [customStyles, theme]);
    var wrapperProps = React__namespace.useMemo(function () { return (__assign({}, (direction !== 'auto' && { dir: direction }))); }, [direction]);
    var calculatedRows = React__namespace.useMemo(function () {
        if (pagination && !paginationServer) {
            var lastIndex = currentPage * rowsPerPage;
            var firstIndex = lastIndex - rowsPerPage;
            return rows.slice(firstIndex, lastIndex);
        }
        return rows;
    }, [currentPage, pagination, paginationServer, rows, rowsPerPage]);
    var handleSort = function (action) {
        dispatch(action);
    };
    var handleSelectAllRows = function (action) {
        dispatch(action);
    };
    var handleSelectedRow = function (action) {
        dispatch(action);
    };
    var handleRowClicked = React__namespace.useCallback(function (row, e) { return onRowClicked(row, e); }, [onRowClicked]);
    var handleRowDoubleClicked = React__namespace.useCallback(function (row, e) { return onRowDoubleClicked(row, e); }, [onRowDoubleClicked]);
    var handleChangePage = function (page) {
        return dispatch({
            type: 'CHANGE_PAGE',
            page: page,
            paginationServer: paginationServer,
            visibleOnly: selectableRowsVisibleOnly,
            persistSelectedOnPageChange: persistSelectedOnPageChange,
        });
    };
    var handleChangeRowsPerPage = function (newRowsPerPage) {
        var rowCount = paginationTotalRows || calculatedRows.length;
        var updatedPage = getNumberOfPages(rowCount, newRowsPerPage);
        var recalculatedPage = recalculatePage(currentPage, updatedPage);
        if (!paginationServer) {
            handleChangePage(recalculatedPage);
        }
        dispatch({ type: 'CHANGE_ROWS_PER_PAGE', page: recalculatedPage, rowsPerPage: newRowsPerPage });
    };
    var showTableHead = function () {
        if (noTableHead) {
            return false;
        }
        if (persistTableHead) {
            return true;
        }
        return rows.length > 0 && !progressPending;
    };
    var showHeader = function () {
        if (noHeader) {
            return false;
        }
        if (title) {
            return true;
        }
        if (actions) {
            return true;
        }
        return false;
    };
    if (pagination && !paginationServer && rows.length > 0 && calculatedRows.length === 0) {
        var updatedPage = getNumberOfPages(rows.length, rowsPerPage);
        var recalculatedPage = recalculatePage(currentPage, updatedPage);
        handleChangePage(recalculatedPage);
    }
    useFirstUpdate(function () {
        onSelectedRowsChange({ allSelected: allSelected, selectedCount: selectedCount, selectedRows: selectedRows });
    }, [toggleOnSelectedRowsChange]);
    useFirstUpdate(function () {
        onSort(selectedColumn, sortDirection);
    }, [selectedColumn, sortDirection]);
    useFirstUpdate(function () {
        onChangePage(currentPage, paginationTotalRows || rows.length);
    }, [currentPage]);
    useFirstUpdate(function () {
        onChangeRowsPerPage(rowsPerPage, currentPage);
    }, [rowsPerPage]);
    useFirstUpdate(function () {
        handleChangePage(paginationDefaultPage);
    }, [paginationDefaultPage, paginationResetDefaultPage]);
    useFirstUpdate(function () {
        if (pagination && paginationServer && paginationTotalRows > 0) {
            var updatedPage = getNumberOfPages(paginationTotalRows, rowsPerPage);
            var recalculatedPage = recalculatePage(currentPage, updatedPage);
            if (currentPage !== recalculatedPage) {
                handleChangePage(recalculatedPage);
            }
        }
    }, [paginationTotalRows]);
    useFirstUpdate(function () {
        dispatch({
            type: 'UPDATE_ROWS',
            rows: setRowData(data, defaultSortColumn === null || defaultSortColumn === void 0 ? void 0 : defaultSortColumn.selector, defaultSortDirection, sortServer, sortFunction),
        });
    }, [data]);
    React__namespace.useEffect(function () {
        dispatch({ type: 'CLEAR_SELECTED_ROWS', selectedRowsFlag: clearSelectedRows });
    }, [selectableRowsSingle, clearSelectedRows]);
    React__namespace.useEffect(function () {
        if (selectableRowSelected && !selectableRowsSingle) {
            var preSelectedRows = rows.filter(function (row) { return selectableRowSelected(row); });
            dispatch({ type: 'SELECT_MULTIPLE_ROWS', keyField: keyField, selectedRows: preSelectedRows, rows: rows, mergeSelections: mergeSelections });
        }
    }, [rows]);
    var rowData = selectableRowsVisibleOnly ? calculatedRows : rows;
    var showSelectAll = persistSelectedOnPageChange || selectableRowsSingle || selectableRowsNoSelectAll;
    return (React__namespace.createElement(styled.ThemeProvider, { theme: currentTheme },
        showHeader() && (React__namespace.createElement(TableHeader, { title: title, actions: actions, showMenu: !noContextMenu, selectedCount: selectedCount, direction: direction, contextActions: contextActions, contextComponent: contextComponent, contextMessage: contextMessage })),
        subHeader && (React__namespace.createElement(TableSubheader, { align: subHeaderAlign, wrapContent: subHeaderWrap }, subHeaderComponent)),
        React__namespace.createElement(ResponsiveWrapper, __assign({ responsive: responsive, overflowYOffset: overflowYOffset, overflowY: overflowY }, wrapperProps),
            React__namespace.createElement(TableWrapper, null,
                progressPending && !persistTableHead && React__namespace.createElement(ProgressWrapper, null, progressComponent),
                React__namespace.createElement(TableStyle, { disabled: disabled, className: "rdt_Table", role: "table" },
                    showTableHead() && (React__namespace.createElement(TableHead, { className: "rdt_TableHead", role: "rowgroup" },
                        React__namespace.createElement(TableHeadRow, { className: "rdt_TableHeadRow", role: "row", dense: dense },
                            selectableRows &&
                                (showSelectAll ? (React__namespace.createElement(CellBase, { style: { flex: '0 0 48px' } })) : (React__namespace.createElement(TableColCheckbox, { allSelected: allSelected, selectedRows: selectedRows, selectableRowsComponent: selectableRowsComponent, selectableRowsComponentProps: selectableRowsComponentProps, selectableRowDisabled: selectableRowDisabled, rowData: rowData, keyField: keyField, mergeSelections: mergeSelections, onSelectAllRows: handleSelectAllRows }))),
                            expandableRows && !expandableRowsHideExpander && React__namespace.createElement(TableColExpander, null),
                            columnsMemo.map(function (column) { return (React__namespace.createElement(TableCol$1, { key: column.id, column: column, disabled: progressPending || rows.length === 0, rows: rows, pagination: pagination, paginationServer: paginationServer, persistSelectedOnSort: persistSelectedOnSort, selectableRowsVisibleOnly: selectableRowsVisibleOnly, selectedColumn: selectedColumn, sortFunction: sortFunction, sortDirection: sortDirection, sortIcon: sortIcon, sortServer: sortServer, onSort: handleSort })); })))),
                    !rows.length && !progressPending && React__namespace.createElement(NoDataWrapper, null, noDataComponent),
                    progressPending && persistTableHead && React__namespace.createElement(ProgressWrapper, null, progressComponent),
                    !progressPending && rows.length > 0 && (React__namespace.createElement(TableBody, { fixedHeader: fixedHeader, fixedHeaderScrollHeight: fixedHeaderScrollHeight, hasOffset: overflowY, offset: overflowYOffset, className: "rdt_TableBody", role: "rowgroup" }, calculatedRows.map(function (row, i) {
                        var id = isEmpty(row[keyField]) ? i : row[keyField];
                        var selected = isRowSelected(row, selectedRows, keyField);
                        var expanderExpander = !!(expandableRows && expandableRowExpanded && expandableRowExpanded(row));
                        var expanderDisabled = !!(expandableRows && expandableRowDisabled && expandableRowDisabled(row));
                        return (React__namespace.createElement(TableRow, { id: id, key: id, keyField: keyField, row: row, columns: columnsMemo, selectableRows: selectableRows, expandableRows: expandableRows, expandableIcon: expandableIcon, highlightOnHover: highlightOnHover, pointerOnHover: pointerOnHover, dense: dense, expandOnRowClicked: expandOnRowClicked, expandOnRowDoubleClicked: expandOnRowDoubleClicked, expandableRowsComponent: expandableRowsComponent, expandableRowsComponentProps: expandableRowsComponentProps, expandableRowsHideExpander: expandableRowsHideExpander, defaultExpanderDisabled: expanderDisabled, defaultExpanded: expanderExpander, expandableInheritConditionalStyles: expandableInheritConditionalStyles, conditionalRowStyles: conditionalRowStyles, rowCount: rows.length, rowIndex: i, selected: selected, selectableRowsHighlight: selectableRowsHighlight, selectableRowsComponent: selectableRowsComponent, selectableRowsComponentProps: selectableRowsComponentProps, selectableRowDisabled: selectableRowDisabled, selectableRowsSingle: selectableRowsSingle, striped: striped, onRowExpandToggled: onRowExpandToggled, onRowClicked: handleRowClicked, onRowDoubleClicked: handleRowDoubleClicked, onSelectedRow: handleSelectedRow }));
                    })))))),
        enabledPagination && (React__namespace.createElement("div", null,
            React__namespace.createElement(Pagination$1, { onChangePage: handleChangePage, onChangeRowsPerPage: handleChangeRowsPerPage, rowCount: paginationTotalRows || rows.length, currentPage: currentPage, rowsPerPage: rowsPerPage, direction: direction, paginationRowsPerPageOptions: paginationRowsPerPageOptions, paginationIconLastPage: paginationIconLastPage, paginationIconFirstPage: paginationIconFirstPage, paginationIconNext: paginationIconNext, paginationIconPrevious: paginationIconPrevious, paginationComponentOptions: paginationComponentOptions })))));
}
var DataTable$1 = React__namespace.memo(DataTable);

exports.STOP_PROP_TAG = STOP_PROP_TAG;
exports.createTheme = createTheme;
exports.default = DataTable$1;
exports.defaultThemes = defaultThemes;
//# sourceMappingURL=react-data-table-component.dev.js.map
