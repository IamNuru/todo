{"ast":null,"code":"import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { error_message } from \"../components/inc/Messages\";\nimport { ADD_TODO_LIST, DELETE_TODO_LIST, TODO_LIST_ERRORS, UPDATE_TODO_LIST, GET_TODO_LIST, GET_TODO_LISTS, SET_TODOLIST_LOADING, CLEAR_TODOLIST_ERRORS, CLEAR_TODOLIST_CURRENT } from \"./types\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  }\n}; //messages for toast\n\n/* const error_message = (message) => {\n  return `<span class=\"error_messge_icon small\"></span> <span>${message}</span>`;\n};\nconst success_message = (message) => {\n  return `<span class=\"success_messge_icon small\"></span> <span>${message}</span>`;\n}; */\n//actions\n//add todo item to server\n\nexport const addTodolist = item => async dispatch => {\n  /* setLoading() */\n  await axios.post(`${process.env.REACT_APP_API_URL}/addtodolist`, item, config).then(res => {\n    M.toast({\n      html: success_message(res.data.message)\n    });\n    dispatch({\n      type: ADD_TODO_LIST,\n      payload: res.data\n    });\n  }).catch(err => {\n    let errors = err.response.data.errors;\n    M.toast({\n      html: error_message(errors[Object.keys(errors)[0]])\n    });\n    dispatch({\n      type: TODO_LIST_ERRORS,\n      payload: err.response && err.response.data.errors\n    });\n  });\n}; //get todos from server\n\nexport const getTodolists = id => async dispatch => {\n  setLoading();\n  await axios.get(`${process.env.REACT_APP_API_URL}/todolists/${id}`, config).then(res => {\n    dispatch({\n      type: GET_TODO_LISTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    let errors = err.response.data.errors;\n    M.toast({\n      html: error_message(errors[Object.keys(errors)[0]])\n    });\n    dispatch({\n      type: TODO_LIST_ERRORS,\n      payload: \"Something went wrong\"\n    });\n  });\n}; //delete todo from locastorage\n\nexport const deleteTodolist = id => async dispatch => {\n  await axios.delete(`${process.env.REACT_APP_API_URL}/todolist/${id}`, config).then(res => {\n    M.toast({\n      html: success_message(res.data.message)\n    });\n    dispatch({\n      type: DELETE_TODO_LIST\n    });\n  }).catch(err => {\n    dispatch({\n      type: TODO_LIST_ERRORS,\n      payload: err.response && err.response.data.errors\n    });\n  });\n}; //update a todo item\n\nexport const updateTodolist = (id, item) => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/updatetodolist/${id}`, item, config).then(res => {\n    M.toast({\n      html: success_message(res.data.message)\n    });\n    dispatch({\n      type: UPDATE_TODO_LIST,\n      payload: res.data\n    });\n  }).catch(err => {\n    var _err$response, _err$response$data;\n\n    let errors = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.errors;\n    M.toast({\n      html: error_message(errors[Object.keys(errors)[0]])\n    });\n    dispatch({\n      type: TODO_LIST_ERRORS,\n      payload: err.response && err.response.data.errors\n    });\n  });\n}; //set the current\n\nexport const getTodolist = id => async dispatch => {\n  await axios.get(`${process.env.REACT_APP_API_URL}/todolist/${id}`, config).then(res => {\n    console.log(res);\n    dispatch({\n      type: GET_TODO_LIST,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: TODO_LIST_ERRORS,\n      payload: \"Something went wrong\"\n    });\n  });\n}; //set the current todolist\n\nexport const setCurrentTodolist = data => {\n  return {\n    type: GET_TODO_LIST,\n    payload: data\n  };\n}; //clear todo errors\n\nexport const clearTodolistErrors = () => {\n  return {\n    type: CLEAR_TODOLIST_ERRORS\n  };\n}; //clear current\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_TODOLIST_CURRENT\n  };\n}; //set loading\n\nexport const setLoading = () => dispatch => {\n  dispatch({\n    type: SET_TODOLIST_LOADING\n  });\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodolistActions.js"],"names":["axios","M","error_message","ADD_TODO_LIST","DELETE_TODO_LIST","TODO_LIST_ERRORS","UPDATE_TODO_LIST","GET_TODO_LIST","GET_TODO_LISTS","SET_TODOLIST_LOADING","CLEAR_TODOLIST_ERRORS","CLEAR_TODOLIST_CURRENT","config","headers","addTodolist","item","dispatch","post","process","env","REACT_APP_API_URL","then","res","toast","html","success_message","data","message","type","payload","catch","err","errors","response","Object","keys","getTodolists","id","setLoading","get","deleteTodolist","delete","updateTodolist","getTodolist","console","log","setCurrentTodolist","clearTodolistErrors","clearCurrent"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { error_message } from \"../components/inc/Messages\"\n\nimport {\n  ADD_TODO_LIST,\n  DELETE_TODO_LIST,\n  TODO_LIST_ERRORS,\n  UPDATE_TODO_LIST,\n  GET_TODO_LIST,\n  GET_TODO_LISTS,\n  SET_TODOLIST_LOADING,\n  CLEAR_TODOLIST_ERRORS,\n  CLEAR_TODOLIST_CURRENT,\n} from \"./types\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n};\n//messages for toast\n/* const error_message = (message) => {\n  return `<span class=\"error_messge_icon small\"></span> <span>${message}</span>`;\n};\nconst success_message = (message) => {\n  return `<span class=\"success_messge_icon small\"></span> <span>${message}</span>`;\n}; */\n\n\n\n//actions\n\n//add todo item to server\nexport const addTodolist = (item) => async (dispatch) => {\n  /* setLoading() */\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/addtodolist`, item, config)\n    .then((res) => {\n      M.toast({ html: success_message(res.data.message) });\n      dispatch({\n        type: ADD_TODO_LIST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      let errors = err.response.data.errors\n      M.toast({ html: error_message(errors[Object.keys(errors)[0]]) });\n      dispatch({\n        type: TODO_LIST_ERRORS,\n        payload: err.response && err.response.data.errors,\n      });\n    });\n};\n\n//get todos from server\nexport const getTodolists = (id) => async (dispatch) => {\n  setLoading();\n  await axios\n    .get(`${process.env.REACT_APP_API_URL}/todolists/${id}`, config)\n    .then((res) => {\n      dispatch({\n        type: GET_TODO_LISTS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      let errors = err.response.data.errors\n      M.toast({ html: error_message(errors[Object.keys(errors)[0]]) });\n      dispatch({\n        type: TODO_LIST_ERRORS,\n        payload: \"Something went wrong\",\n      });\n    });\n};\n\n//delete todo from locastorage\nexport const deleteTodolist = (id) => async (dispatch) => {\n  await axios\n    .delete(`${process.env.REACT_APP_API_URL}/todolist/${id}`, config)\n    .then((res) => {\n      M.toast({ html: success_message(res.data.message) });\n      dispatch({\n        type: DELETE_TODO_LIST,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: TODO_LIST_ERRORS,\n        payload:err.response && err.response.data.errors,\n      });\n    });\n};\n\n//update a todo item\nexport const updateTodolist = (id, item) => async (dispatch) => {\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/updatetodolist/${id}`, item, config)\n    .then((res) => {\n      M.toast({ html: success_message(res.data.message) });\n      dispatch({\n        type: UPDATE_TODO_LIST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      let errors = err.response?.data?.errors\n      M.toast({ html: error_message(errors[Object.keys(errors)[0]]) });\n      dispatch({\n        type: TODO_LIST_ERRORS,\n        payload: err.response && err.response.data.errors,\n      });\n    });\n};\n\n//set the current\nexport const getTodolist = (id) => async (dispatch) => {\n  await axios\n    .get(`${process.env.REACT_APP_API_URL}/todolist/${id}`, config)\n    .then((res) => {\n      console.log(res)\n      dispatch({\n        type: GET_TODO_LIST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch({\n        type: TODO_LIST_ERRORS,\n        payload: \"Something went wrong\",\n      });\n    });\n};\n\n\n//set the current todolist\nexport const setCurrentTodolist = (data) => {\n  return {\n    type: GET_TODO_LIST,\n    payload: data,\n  };\n};\n\n//clear todo errors\nexport const clearTodolistErrors = () => {\n  return {\n    type: CLEAR_TODOLIST_ERRORS\n  };\n};\n\n//clear current\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_TODOLIST_CURRENT,\n  };\n};\n\n//set loading\nexport const setLoading = () => (dispatch) => {\n  dispatch ({\n    type: SET_TODOLIST_LOADING,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}