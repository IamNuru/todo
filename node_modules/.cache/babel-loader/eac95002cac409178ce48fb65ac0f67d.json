{"ast":null,"code":"import { ADD_TODO_LIST, TODO_LIST_ERRORS, UPDATE_TODO_LIST, GET_TODO_LISTS, GET_TODO_LIST, SET_TODOLIST_LOADING, DELETE_TODO_LIST, ADD_TODO, UPDATE_TODO } from \"../actions/types\";\nconst initialState = {\n  todolists: null,\n  current_todolist: null,\n  loading: true,\n  errors: null,\n  success: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_TODO_LISTS:\n      return { ...state,\n        todolists: action.payload,\n        loading: false\n      };\n\n    case ADD_TODO_LIST:\n    case UPDATE_TODO_LIST:\n      return { ...state,\n        todolists: [...state.todolists, action.payload.data],\n        loading: false\n      };\n\n    case GET_TODO_LIST:\n      return { ...state,\n        current_todolist: action.payload,\n        loading: false\n      };\n\n    case TODO_LIST_ERRORS:\n      return { ...state,\n        errors: action.payload,\n        success: null,\n        loading: false\n      };\n\n    case SET_TODOLIST_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case DELETE_TODO_LIST:\n      return { ...state,\n        current_todolist: {},\n        loading: false\n      };\n\n    /* case CLEAR_TODOLIST_ERRORS:\n      return {\n        ...state,\n        errors: null,\n      }; */\n    //add todos\n\n    case ADD_TODO:\n    case UPDATE_TODO:\n      return { ...state,\n        todos: [...state.current_todolist.todos, action.payload.data],\n        loading: false,\n        success: action.payload.message\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        current_todolist: state.current_todolist.todos.filter(tod => tod.id !== action.payload),\n        success: 'Item deleted successfully'\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/generous/projects/todo/src/reducers/Todolists.js"],"names":["ADD_TODO_LIST","TODO_LIST_ERRORS","UPDATE_TODO_LIST","GET_TODO_LISTS","GET_TODO_LIST","SET_TODOLIST_LOADING","DELETE_TODO_LIST","ADD_TODO","UPDATE_TODO","initialState","todolists","current_todolist","loading","errors","success","state","action","type","payload","data","todos","message","DELETE_TODO","filter","tod","id"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,oBANF,EAOEC,gBAPF,EAQEC,QARF,EASEC,WATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,IADQ;AAEnBC,EAAAA,gBAAgB,EAAE,IAFC;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAWA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,cAAL;AACE,aAAM,EACJ,GAAGY,KADC;AAEJL,QAAAA,SAAS,EAAEM,MAAM,CAACE,OAFd;AAGJN,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAKF,SAAKZ,aAAL;AACA,SAAKE,gBAAL;AACE,aAAM,EACJ,GAAGa,KADC;AAEJL,QAAAA,SAAS,EAAE,CAAC,GAAGK,KAAK,CAACL,SAAV,EAAqBM,MAAM,CAACE,OAAP,CAAeC,IAApC,CAFP;AAGJP,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAMF,SAAKR,aAAL;AACE,aAAM,EACJ,GAAGW,KADC;AAEJJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACE,OAFrB;AAGJN,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAMF,SAAKX,gBAAL;AACE,aAAM,EACJ,GAAGc,KADC;AAEJF,QAAAA,MAAM,EAACG,MAAM,CAACE,OAFV;AAGJJ,QAAAA,OAAO,EAAE,IAHL;AAIJF,QAAAA,OAAO,EAAE;AAJL,OAAN;;AAMF,SAAKP,oBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKN,gBAAL;AACE,aAAM,EACJ,GAAGS,KADC;AAEJJ,QAAAA,gBAAgB,EAAE,EAFd;AAGJC,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAKF;AACJ;AACA;AACA;AACA;AAGM;;AACA,SAAKL,QAAL;AACA,SAAKC,WAAL;AACA,aAAM,EACJ,GAAGO,KADC;AAEJK,QAAAA,KAAK,EAAE,CAAC,GAAGL,KAAK,CAACJ,gBAAN,CAAuBS,KAA3B,EAAkCJ,MAAM,CAACE,OAAP,CAAeC,IAAjD,CAFH;AAGJP,QAAAA,OAAO,EAAE,KAHL;AAIJE,QAAAA,OAAO,EAAEE,MAAM,CAACE,OAAP,CAAeG;AAJpB,OAAN;;AAOA,SAAKC,WAAL;AACA,aAAM,EACJ,GAAGP,KADC;AAEJJ,QAAAA,gBAAgB,EAAEI,KAAK,CAACJ,gBAAN,CAAuBS,KAAvB,CAA6BG,MAA7B,CAAoCC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWT,MAAM,CAACE,OAA7D,CAFd;AAGJJ,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAMF;AACE,aAAOC,KAAP;AAjEJ;AAmED,CApED","sourcesContent":["import {\n  ADD_TODO_LIST,\n  TODO_LIST_ERRORS,\n  UPDATE_TODO_LIST,\n  GET_TODO_LISTS,\n  GET_TODO_LIST,\n  SET_TODOLIST_LOADING,\n  DELETE_TODO_LIST,\n  ADD_TODO,\n  UPDATE_TODO,\n} from \"../actions/types\";\n\nconst initialState = {\n  todolists: null,\n  current_todolist: null,\n  loading: true,\n  errors: null,\n  success: null,\n};\n\n\n\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TODO_LISTS:\n      return{\n        ...state,\n        todolists: action.payload,\n        loading: false\n      }\n    case ADD_TODO_LIST:\n    case UPDATE_TODO_LIST:\n      return{\n        ...state,\n        todolists: [...state.todolists, action.payload.data],\n        loading: false\n      }\n\n    case GET_TODO_LIST:\n      return{\n        ...state,\n        current_todolist: action.payload,\n        loading: false\n      }\n\n    case TODO_LIST_ERRORS:\n      return{\n        ...state,\n        errors:action.payload,\n        success: null,\n        loading: false\n      }\n    case SET_TODOLIST_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case DELETE_TODO_LIST:\n      return{\n        ...state,\n        current_todolist: {},\n        loading: false\n      }\n    /* case CLEAR_TODOLIST_ERRORS:\n      return {\n        ...state,\n        errors: null,\n      }; */\n\n\n      //add todos\n      case ADD_TODO:\n      case UPDATE_TODO:\n      return{\n        ...state,\n        todos: [...state.current_todolist.todos, action.payload.data],\n        loading: false,\n        success: action.payload.message\n      }\n\n      case DELETE_TODO:\n      return{\n        ...state,\n        current_todolist: state.current_todolist.todos.filter(tod => tod.id !== action.payload),\n        success: 'Item deleted successfully'\n      }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}