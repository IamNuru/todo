{"ast":null,"code":"import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { errorBeep2 } from \"../components/inc/Beeps\";\nimport { isEmptyObject } from \"../components/inc/checkIsEmpty\";\nimport { REGISTER_USER, LOGIN_USER, USER_ERROR, CLEAR_USER_ERRORS, LOGOUT_USER } from \"./types\"; //configuration\n\nconst config = {\n  headers: {\n    'Content-type': 'application/json'\n  }\n}; //toasts\n\nconst success_message = message => {\n  return `<span class=\"success_messge_icon small\"></span> <span>${message}. You will be redirected</span>`;\n}; //actions\n//CREATE AN ACCOUNT\n\n\nexport const register = data => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/register/user`, data, config).then(res => {\n    dispatch({\n      type: REGISTER_USER,\n      payload: res.data\n    });\n    M.toast({\n      html: success_message(res.data.message)\n    }); //update local storage with res.data\n\n    localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data));\n  }).catch(err => {\n    dispatch({\n      type: USER_ERROR,\n      payload: err.response.data.errors\n    });\n  });\n}; //login user\n\nexport const login = data => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/login/user`, data, config).then(res => {\n    var _res$data;\n\n    if (isEmptyObject(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data)) {} else {\n      dispatch({\n        type: LOGIN_USER,\n        payload: res.data\n      });\n    } //update local storage with res.data\n\n\n    localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data));\n  }).catch(err => {\n    errorBeep2();\n    dispatch({\n      type: USER_ERROR,\n      payload: err.response.data.errors\n    });\n  });\n}; //log user out\n\nexport const logout = () => {\n  localStorage.removeItem('todo_user');\n  M.toast({\n    html: success_message(\"Logout successful\")\n  });\n  return {\n    type: LOGOUT_USER\n  };\n}; //clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_USER_ERRORS\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/User.js"],"names":["axios","M","errorBeep2","isEmptyObject","REGISTER_USER","LOGIN_USER","USER_ERROR","CLEAR_USER_ERRORS","LOGOUT_USER","config","headers","success_message","message","register","data","dispatch","post","process","env","REACT_APP_API_URL","then","res","type","payload","toast","html","localStorage","setItem","JSON","stringify","catch","err","response","errors","login","logout","removeItem","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,4CAAd;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAAQC,aAAR,QAA4B,gCAA5B;AAEA,SAAQC,aAAR,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,iBAA/C,EAAkEC,WAAlE,QAAoF,SAApF,C,CAEA;;AACA,MAAMC,MAAM,GAAE;AACVC,EAAAA,OAAO,EAAC;AACJ,oBAAgB;AADZ;AADE,CAAd,C,CAOA;;AACA,MAAMC,eAAe,GAAIC,OAAD,IAAa;AACjC,SAAQ,yDAAwDA,OAAQ,iCAAxE;AACD,CAFH,C,CAMA;AACA;;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAmB;AACjD,QAAMf,KAAK,CAACgB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAA5C,EAA6DL,IAA7D,EAAmEL,MAAnE,EACLW,IADK,CACAC,GAAG,IAAG;AACRN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAElB,aADD;AAELmB,MAAAA,OAAO,EAAEF,GAAG,CAACP;AAFR,KAAD,CAAR;AAIAb,IAAAA,CAAC,CAACuB,KAAF,CAAQ;AAAEC,MAAAA,IAAI,EAAEd,eAAe,CAACU,GAAG,CAACP,IAAJ,CAASF,OAAV;AAAvB,KAAR,EALQ,CAMR;;AACAc,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACP,IAAJ,CAASA,IAAxB,CAAlC;AACH,GATK,EASHgB,KATG,CASGC,GAAG,IAAG;AACXhB,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEhB,UADD;AAELiB,MAAAA,OAAO,EAAEQ,GAAG,CAACC,QAAJ,CAAalB,IAAb,CAAkBmB;AAFtB,KAAD,CAAR;AAIH,GAdK,CAAN;AAeH,CAhBM,C,CAmBP;;AACA,OAAO,MAAMC,KAAK,GAAIpB,IAAD,IAAS,MAAOC,QAAP,IAAmB;AAC7C,QAAMf,KAAK,CAACgB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAA5C,EAA0DL,IAA1D,EAAgEL,MAAhE,EACLW,IADK,CACAC,GAAG,IAAG;AAAA;;AACR,QAAGlB,aAAa,CAACkB,GAAD,aAACA,GAAD,oCAACA,GAAG,CAAEP,IAAN,8CAAC,UAAWA,IAAZ,CAAhB,EAAkC,CAEjC,CAFD,MAEK;AACFC,MAAAA,QAAQ,CAAC;AACJO,QAAAA,IAAI,EAAEjB,UADF;AAEJkB,QAAAA,OAAO,EAAEF,GAAG,CAACP;AAFT,OAAD,CAAR;AAIF,KARO,CASR;;;AACAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACP,IAAJ,CAASA,IAAxB,CAAlC;AACH,GAZK,EAYHgB,KAZG,CAYGC,GAAG,IAAG;AACX7B,IAAAA,UAAU;AACVa,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEhB,UADD;AAELiB,MAAAA,OAAO,EAAEQ,GAAG,CAACC,QAAJ,CAAalB,IAAb,CAAkBmB;AAFtB,KAAD,CAAR;AAIH,GAlBK,CAAN;AAmBH,CApBM,C,CAuBP;;AACA,OAAO,MAAME,MAAM,GAAG,MAAK;AACvBT,EAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAnC,EAAAA,CAAC,CAACuB,KAAF,CAAQ;AAAEC,IAAAA,IAAI,EAAEd,eAAe,CAAC,mBAAD;AAAvB,GAAR;AACA,SAAM;AACFW,IAAAA,IAAI,EAAEd;AADJ,GAAN;AAGH,CANM,C,CAQP;;AACA,OAAO,MAAM6B,WAAW,GAAG,MAAK;AAC5B,SAAM;AACFf,IAAAA,IAAI,EAAEf;AADJ,GAAN;AAGH,CAJM","sourcesContent":["import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { errorBeep2 } from \"../components/inc/Beeps\";\nimport {isEmptyObject} from \"../components/inc/checkIsEmpty\"\n\nimport {REGISTER_USER, LOGIN_USER, USER_ERROR, CLEAR_USER_ERRORS, LOGOUT_USER} from \"./types\"\n\n//configuration\nconst config ={\n    headers:{\n        'Content-type' :'application/json'\n    }\n}\n\n\n//toasts\nconst success_message = (message) => {\n    return `<span class=\"success_messge_icon small\"></span> <span>${message}. You will be redirected</span>`;\n  };\n\n\n\n//actions\n//CREATE AN ACCOUNT\nexport const register = (data) => async (dispatch) =>{\n    await axios.post(`${process.env.REACT_APP_API_URL}/register/user`, data, config)\n    .then(res =>{\n        dispatch({\n            type: REGISTER_USER,\n            payload: res.data\n        })\n        M.toast({ html: success_message(res.data.message) });\n        //update local storage with res.data\n        localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data))\n    }).catch(err =>{\n        dispatch({\n            type: USER_ERROR,\n            payload: err.response.data.errors\n        })\n    })\n}\n\n\n//login user\nexport const login = (data) =>async (dispatch) =>{\n    await axios.post(`${process.env.REACT_APP_API_URL}/login/user`, data, config)\n    .then(res =>{\n        if(isEmptyObject(res?.data?.data)){\n            \n        }else{\n           dispatch({\n                type: LOGIN_USER,\n                payload: res.data\n            }) \n        }\n        //update local storage with res.data\n        localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data))\n    }).catch(err =>{\n        errorBeep2()\n        dispatch({\n            type: USER_ERROR,\n            payload: err.response.data.errors\n        })\n    })\n}\n\n\n//log user out\nexport const logout = () =>{\n    localStorage.removeItem('todo_user')\n    M.toast({ html: success_message(\"Logout successful\") });\n    return{\n        type: LOGOUT_USER\n    }\n}\n\n//clear errors\nexport const clearErrors = () =>{\n    return{\n        type: CLEAR_USER_ERRORS\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}