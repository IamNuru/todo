{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/todo/src/components/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getTodolists, setLoading } from \"../../actions/TodolistActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = ({\n  mytodolists: {\n    todolists,\n    loading\n  },\n  getTodolists,\n  setLoading\n}) => {\n  _s();\n\n  useEffect(() => {\n    const getlists = async () => {\n      console.log(loading);\n      await setLoading;\n      await getTodolists();\n    };\n\n    getlists();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-grey text-center\",\n      children: [\"In order to be able to keep track of your todos, You need to\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        className: \"hover-underline\",\n        children: \" Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), \" with us. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 101\n      }, this), \"You already have an \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        className: \"hover-underline\",\n        children: \"account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 37\n      }, this), \" You can please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 116\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-grey\",\n      children: \"You have the following list of TodoList:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"homepagelists\",\n      children: !loading ? (todolists === null || todolists === void 0 ? void 0 : todolists.length) > 0 ? todolists.map(t => {\n        var _t$todos;\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons center\",\n            style: {\n              lineHeight: '0',\n              fontSize: 'inherit'\n            },\n            children: \"event_note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 54\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `${t.id}/todos`,\n            className: \"collection-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge\",\n              children: (_t$todos = t.todos) === null || _t$todos === void 0 ? void 0 : _t$todos.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 206\n            }, this), t.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 151\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 39\n        }, this);\n      }) : 'Empty' : \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-grey\",\n      children: \"You have not yet create a todolist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"waves-effect modal-trigger waves-light btn-small\",\n      href: \"#create_todolist_modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons left\",\n        children: \"create_new_folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 112\n      }, this), \"Create New\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = HomePage;\n\nconst mapStateToProps = state => ({\n  mytodolists: state.todolist\n});\n\nexport default connect(mapStateToProps, {\n  getTodolists,\n  setLoading\n})(HomePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/generous/projects/todo/src/components/pages/HomePage.js"],"names":["React","useEffect","Link","connect","getTodolists","setLoading","HomePage","mytodolists","todolists","loading","getlists","console","log","length","map","t","lineHeight","fontSize","id","todos","name","mapStateToProps","state","todolist"],"mappings":"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","sourcesContent":["import React, { useEffect} from 'react'\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport { getTodolists, setLoading } from \"../../actions/TodolistActions\"\n\n\nconst HomePage = ({mytodolists:{todolists, loading}, getTodolists, setLoading}) => {\n    useEffect(() =>{\n        const getlists = async () =>{\n            console.log(loading)\n            await setLoading\n            await getTodolists()\n        }\n        getlists()\n    },[])\n    return (\n        <div className=\"homepage\">\n\n            <p className=\"text-grey text-center\"> \n                In order to be able to keep track of your todos, You need to\n                <Link to=\"/register\" className=\"hover-underline\"> Create an account</Link> with us. <br />\n                You already have an <Link to=\"/register\" className=\"hover-underline\">account</Link> You can please <Link to=\"/login\">login</Link>\n            </p>\n            <p className=\"text-grey\"> \n                You have the following list of TodoList:\n            </p>\n            <ul className=\"homepagelists\">\n                {\n                    !loading ? (\n                        todolists?.length > 0 ? (\n                            todolists.map(t =>{\n                               return <li key={t.id}><i className=\"material-icons center\" style={{lineHeight:'0', fontSize:'inherit'}}>event_note</i> <Link to={`${t.id}/todos`} className=\"collection-item\"><span className=\"badge\">{t.todos?.length}</span>{t.name}</Link></li> \n                            })\n                        ):('Empty')\n                    ):(\"loading\")\n                }\n            </ul>\n            <p className=\"text-grey\">\n                You have not yet create a todolist\n\n            </p>\n            <button className=\"waves-effect modal-trigger waves-light btn-small\" href=\"#create_todolist_modal\"><i className=\"material-icons left\">create_new_folder</i>Create New</button>\n\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state =>({\n    mytodolists: state.todolist,\n})\n\nexport default connect(mapStateToProps,{getTodolists, setLoading}) (HomePage);\n"]},"metadata":{},"sourceType":"module"}