{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/todo/src/components/modals/EditTodolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTodolist, getTodolists } from \"../../actions/TodolistActions\";\nimport { error_message } from \"../inc/Messages\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTodolist = ({\n  current_toodolist,\n  errors,\n  getTodolists,\n  updateTodolist\n}) => {\n  _s();\n\n  //state\n  const [todolistName, setTodolistName] = useState(''); //ON INPUT CHANGES\n\n  const onChange = e => {\n    setTodolistName(e.target.value);\n  }; //submit the form\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (current_toodolist.id === '') {\n      M.toast({\n        html: error_message('Something went wrong, Please refresh page.')\n      });\n    }\n\n    const data = {\n      todolistName: todolistName\n    };\n    await updateTodolist(current_toodolist.id, data);\n    await getTodolist(current_toodolist.id);\n    setTodolistName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editTodolist\",\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      style: {\n        textAlign: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#!\",\n        className: \"modal-close material-icons header-modal-close\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content py-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Create New Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"todolistName\",\n              value: todolistName,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrong\",\n        style: {\n          color: 'red',\n          marginTop: '-3rem',\n          textAlign: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"waves-effect waves-light btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons left\",\n            children: \"update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \"Update\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditTodolist, \"7quqNpzs9ae9pPYcIosV9mFC910=\");\n\n_c = EditTodolist;\n\nconst mapStateToProps = state => ({\n  errors: state.todolist.errors,\n  current_list: state.todolist.current_list\n});\n\nexport default connect(mapStateToProps, {\n  getTodolists,\n  updateTodolist\n})(EditTodolist);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodolist\");","map":{"version":3,"sources":["/home/generous/projects/todo/src/components/modals/EditTodolist.js"],"names":["React","useState","connect","updateTodolist","getTodolists","error_message","M","EditTodolist","current_toodolist","errors","todolistName","setTodolistName","onChange","e","target","value","onSubmit","preventDefault","id","toast","html","data","getTodolist","textAlign","color","marginTop","mapStateToProps","state","todolist","current_list"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\"\nimport { updateTodolist, getTodolists } from \"../../actions/TodolistActions\";\nimport { error_message } from \"../inc/Messages\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst EditTodolist = ({ current_toodolist, errors, getTodolists, updateTodolist }) => {\n\n    //state\n    const [todolistName, setTodolistName] = useState('')\n\n\n    //ON INPUT CHANGES\n    const onChange = (e) =>{\n        setTodolistName(e.target.value)\n    }\n\n    //submit the form\n    const onSubmit = async (e) =>{\n        e.preventDefault()\n        if(current_toodolist.id === ''){\n          M.toast({html: error_message('Something went wrong, Please refresh page.')})\n        }\n        const data = {\n          todolistName : todolistName,\n        }\n        await updateTodolist(current_toodolist.id, data)\n        await getTodolist(current_toodolist.id)\n        setTodolistName('')\n    }\n\n\n  return (\n    <div id=\"editTodolist\" className=\"modal\">\n      <div className=\"modal-header\" style={{textAlign:'right'}}>\n        <a href=\"#!\" className=\"modal-close material-icons header-modal-close\">close</a>\n      </div>\n      <form onSubmit={onSubmit}>\n        <div className=\"modal-content py-0\">\n          <h6>Create New Todo List</h6>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" name=\"todolistName\" value={todolistName} onChange={onChange} />\n              <label htmlFor=\"name\">Name</label>\n            </div>\n          </div>\n        </div>\n        <div className=\"wrong\" style={{color: 'red', marginTop: '-3rem',textAlign: 'center'}}>\n          {\n          /* errors && errors.todolistName[0] */\n        }\n        </div>\n        \n        <div className=\"modal-footer\">\n          <button type=\"submit\" className=\"waves-effect waves-light btn\">\n            <i className=\"material-icons left\">update</i>Update\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state =>({\n  errors: state.todolist.errors,\n  current_list: state.todolist.current_list,\n})\nexport default connect(mapStateToProps, { getTodolists, updateTodolist})(EditTodolist);\n"]},"metadata":{},"sourceType":"module"}