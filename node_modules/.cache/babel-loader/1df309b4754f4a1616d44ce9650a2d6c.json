{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, ERRORS, UPDATE_TODO, GET_TODOS, GET_TODO, SET_LOADING, CLEAR_ERRORS } from \"./types\"; //actions\n//add todo item to server\n\nexport const addTodo = data => async dispatch => {\n  //Add to local storage\n  getTodos();\n  setLoading();\n  var stodos = [];\n\n  if (localStorage.getItem(\"todos\")) {\n    stodos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n\n  stodos.push({\n    id: Math.abs(new Date()),\n    description: data.description,\n    deadline: data.deadline,\n    status: false\n  });\n  await localStorage.setItem(\"todos\", JSON.stringify(stodos));\n  getTodos();\n  /* dispatch({\n      type: ADD_TODO,\n      payload: data\n  }) */\n}; //get todos from server\n\nexport const getTodos = () => async dispatch => {\n  setLoading();\n  console.log('worked');\n\n  if (localStorage.getItem(\"todos\")) {\n    dispatch({\n      type: GET_TODOS,\n      payload: JSON.parse(localStorage.getItem(\"todos\"))\n    });\n  } else {\n    dispatch({\n      type: ERRORS,\n      payload: 'NO DATA AVAILABLE'\n    });\n  }\n}; //delete todo from server\n//update a todo item\n//clear todo errors\n\nexport const clearErrors = () => {\n  console.log('loading');\n  return {\n    type: CLEAR_ERRORS\n  };\n}; //set loading\n\nexport const setLoading = () => {\n  console.log('loading');\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodoActions.js"],"names":["ADD_TODO","DELETE_TODO","ERRORS","UPDATE_TODO","GET_TODOS","GET_TODO","SET_LOADING","CLEAR_ERRORS","addTodo","data","dispatch","getTodos","setLoading","stodos","localStorage","getItem","JSON","parse","push","id","Math","abs","Date","description","deadline","status","setItem","stringify","console","log","type","payload","clearErrors"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,YARF,QASO,SATP,C,CAWA;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACnD;AACAC,EAAAA,QAAQ;AACRC,EAAAA,UAAU;AACV,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/BF,IAAAA,MAAM,GAAGG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAT;AACH;;AACDF,EAAAA,MAAM,CAACK,IAAP,CAAY;AACRC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,CAAS,IAAIC,IAAJ,EAAT,CADI;AAERC,IAAAA,WAAW,EAAEd,IAAI,CAACc,WAFV;AAGRC,IAAAA,QAAQ,EAAEf,IAAI,CAACe,QAHP;AAIRC,IAAAA,MAAM,EAAE;AAJA,GAAZ;AAMA,QAAMX,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,SAAL,CAAed,MAAf,CAA9B,CAAN;AACAF,EAAAA,QAAQ;AACR;AACF;AACA;AACA;AACC,CApBM,C,CAsBP;;AACA,OAAO,MAAMA,QAAQ,GAAG,MAAM,MAAOD,QAAP,IAAoB;AAC9CE,EAAAA,UAAU;AACVgB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACF,MAAIf,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCL,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAE1B,SADC;AAEP2B,MAAAA,OAAO,EAAEf,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;AAFF,KAAD,CAAR;AAID,GALD,MAKO;AACLL,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAE5B,MADC;AAEP6B,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;AAEA;AAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7BJ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF,SAAO;AACLC,IAAAA,IAAI,EAAEvB;AADD,GAAP;AAGD,CALM,C,CAOP;;AACA,OAAO,MAAMK,UAAU,GAAG,MAAM;AAC5BgB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF,SAAO;AACLC,IAAAA,IAAI,EAAExB;AADD,GAAP;AAGD,CALM","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  ERRORS,\n  UPDATE_TODO,\n  GET_TODOS,\n  GET_TODO,\n  SET_LOADING,\n  CLEAR_ERRORS,\n} from \"./types\";\n\n//actions\n\n//add todo item to server\nexport const addTodo = (data) => async (dispatch) => {\n  //Add to local storage\n  getTodos();\n  setLoading();\n  var stodos = [];\n  if (localStorage.getItem(\"todos\")) {\n      stodos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  stodos.push({\n      id: Math.abs(new Date()),\n      description: data.description,\n      deadline: data.deadline,\n      status: false,\n  });\n  await localStorage.setItem(\"todos\", JSON.stringify(stodos));\n  getTodos()\n  /* dispatch({\n      type: ADD_TODO,\n      payload: data\n  }) */\n};\n\n//get todos from server\nexport const getTodos = () => async (dispatch) => {\n    setLoading();\n    console.log('worked')\n  if (localStorage.getItem(\"todos\")) {\n    dispatch({\n      type: GET_TODOS,\n      payload: JSON.parse(localStorage.getItem(\"todos\")),\n    });\n  } else {\n    dispatch({\n      type: ERRORS,\n      payload: 'NO DATA AVAILABLE'\n    });\n  }\n};\n\n//delete todo from server\n\n//update a todo item\n\n//clear todo errors\nexport const clearErrors = () => {\n    console.log('loading')\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n\n//set loading\nexport const setLoading = () => {\n    console.log('loading')\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}