{"ast":null,"code":"import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { errorBeep2 } from \"../components/inc/Beeps\";\nimport { isEmptyObject } from \"../components/inc/checkIsEmpty\";\nimport { success_message } from \"../components/inc/Messages\";\nimport { REGISTER_USER, LOGIN_USER, UPDATE_USER, USER_ERROR, CLEAR_USER_ERRORS, LOGOUT_USER } from \"./types\"; //configuration\n\nconst config = {\n  headers: {\n    'Content-type': 'application/json'\n  }\n}; //actions\n//CREATE AN ACCOUNT\n\nexport const register = data => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/register/user`, data, config).then(res => {\n    dispatch({\n      type: REGISTER_USER,\n      payload: res.data\n    });\n    M.toast({\n      html: success_message(res.data.message)\n    }); //update local storage with res.data\n\n    localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data));\n  }).catch(err => {\n    dispatch({\n      type: USER_ERROR,\n      payload: err.response.data.errors\n    });\n  });\n}; //login user\n\nexport const login = data => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/login/user`, data, config).then(res => {\n    var _res$data;\n\n    if (isEmptyObject(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data)) {\n      errorBeep2();\n      dispatch({\n        type: USER_ERROR,\n        payload: \"Something went wrong\"\n      });\n    } else {\n      dispatch({\n        type: LOGIN_USER,\n        payload: res.data\n      });\n    } //update local storage with res.data\n\n\n    localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data));\n  }).catch(err => {\n    errorBeep2();\n    dispatch({\n      type: USER_ERROR,\n      payload: err.response.data.errors\n    });\n  });\n}; //reset user password\n\nexport const resetPassword = data => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/resetpassword/user`, data, config).then(res => {\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data\n    });\n    M.toast({\n      html: success_message(res.data.message)\n    }); //update local storage with res.data\n\n    localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data));\n  }).catch(err => {\n    dispatch({\n      type: USER_ERROR,\n      payload: err.response.data.errors\n    });\n  });\n}; //log user out\n\nexport const logout = () => {\n  localStorage.removeItem('todo_user');\n  M.toast({\n    html: success_message(\"Logout successful\")\n  });\n  return {\n    type: LOGOUT_USER\n  };\n}; //clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_USER_ERRORS\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/User.js"],"names":["axios","M","errorBeep2","isEmptyObject","success_message","REGISTER_USER","LOGIN_USER","UPDATE_USER","USER_ERROR","CLEAR_USER_ERRORS","LOGOUT_USER","config","headers","register","data","dispatch","post","process","env","REACT_APP_API_URL","then","res","type","payload","toast","html","message","localStorage","setItem","JSON","stringify","catch","err","response","errors","login","resetPassword","logout","removeItem","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { errorBeep2 } from \"../components/inc/Beeps\";\nimport {isEmptyObject} from \"../components/inc/checkIsEmpty\"\nimport { success_message } from \"../components/inc/Messages\"\n\nimport {REGISTER_USER, LOGIN_USER,UPDATE_USER, USER_ERROR, CLEAR_USER_ERRORS, LOGOUT_USER} from \"./types\"\n\n//configuration\nconst config ={\n    headers:{\n        'Content-type' :'application/json'\n    }\n}\n\n\n\n\n\n//actions\n//CREATE AN ACCOUNT\nexport const register = (data) => async (dispatch) =>{\n    await axios.post(`${process.env.REACT_APP_API_URL}/register/user`, data, config)\n    .then(res =>{\n        dispatch({\n            type: REGISTER_USER,\n            payload: res.data\n        })\n        M.toast({ html: success_message(res.data.message) });\n        //update local storage with res.data\n        localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data))\n    }).catch(err =>{\n        dispatch({\n            type: USER_ERROR,\n            payload: err.response.data.errors\n        })\n    })\n}\n\n\n\n\n\n//login user\nexport const login = (data) =>async (dispatch) =>{\n    await axios.post(`${process.env.REACT_APP_API_URL}/login/user`, data, config)\n    .then(res =>{\n        if(isEmptyObject(res?.data?.data)){\n            errorBeep2()\n            dispatch({\n                type: USER_ERROR,\n                payload: \"Something went wrong\"\n            })\n        }else{\n           dispatch({\n                type: LOGIN_USER,\n                payload: res.data\n            }) \n        }\n        //update local storage with res.data\n        localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data))\n    }).catch(err =>{\n        errorBeep2()\n        dispatch({\n            type: USER_ERROR,\n            payload: err.response.data.errors\n        })\n    })\n}\n\n\n\n\n//reset user password\nexport const resetPassword = (data) => async (dispatch) =>{\n    await axios.post(`${process.env.REACT_APP_API_URL}/resetpassword/user`, data, config)\n    .then(res =>{\n        dispatch({\n            type: UPDATE_USER,\n            payload: res.data\n        })\n        M.toast({ html: success_message(res.data.message) });\n        //update local storage with res.data\n        localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data))\n    }).catch(err =>{\n        dispatch({\n            type: USER_ERROR,\n            payload: err.response.data.errors\n        })\n    })\n}\n\n\n\n\n\n//log user out\nexport const logout = () =>{\n    localStorage.removeItem('todo_user')\n    M.toast({ html: success_message(\"Logout successful\") });\n    return{\n        type: LOGOUT_USER\n    }\n}\n\n\n\n\n\n//clear errors\nexport const clearErrors = () =>{\n    return{\n        type: CLEAR_USER_ERRORS\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}