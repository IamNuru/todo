{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, TODO_ERRORS, UPDATE_TODO, GET_TODOS, GET_TODO, SET_TODO_LOADING, CLEAR_TODO_ERRORS, CLEAR_TODO_CURRENT, CLEAR_TODOS } from \"../actions/types\";\nconst initialState = {\n  todos: null,\n  current: null,\n  loading: false,\n  errors: null,\n  success: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_TODOS:\n      return { ...state,\n        todos: action.payload,\n        loading: false\n      };\n\n    case ADD_TODO:\n    case UPDATE_TODO:\n      return { ...state,\n        todos: [...state.todos, action.payload.data],\n        loading: false,\n        success: action.payload.message\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        todos: state.todos.filter(tod => tod.id !== action.payload),\n        success: 'Item deleted successfully'\n      };\n\n    case GET_TODO:\n      return { ...state,\n        current: action.payload\n      };\n\n    case TODO_ERRORS:\n      return { ...state,\n        errors: action.payload\n      };\n\n    case SET_TODO_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case CLEAR_TODO_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case CLEAR_TODOS:\n      return { ...state,\n        todos: null\n      };\n\n    case CLEAR_TODO_ERRORS:\n      return { ...state,\n        errors: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/generous/projects/todo/src/reducers/TodoItemsReducer.js"],"names":["ADD_TODO","DELETE_TODO","TODO_ERRORS","UPDATE_TODO","GET_TODOS","GET_TODO","SET_TODO_LOADING","CLEAR_TODO_ERRORS","CLEAR_TODO_CURRENT","CLEAR_TODOS","initialState","todos","current","loading","errors","success","state","action","type","payload","data","message","filter","tod","id"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,gBAPF,EAQEC,iBARF,EASEC,kBATF,EAUEC,WAVF,QAWO,kBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAWA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,SAAL;AACE,aAAM,EACJ,GAAGY,KADC;AAEJL,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAFV;AAGJN,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAKF,SAAKb,QAAL;AACA,SAAKG,WAAL;AACE,aAAM,EACJ,GAAGa,KADC;AAEJL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACE,OAAP,CAAeC,IAAhC,CAFH;AAGJP,QAAAA,OAAO,EAAE,KAHL;AAIJE,QAAAA,OAAO,EAAEE,MAAM,CAACE,OAAP,CAAeE;AAJpB,OAAN;;AAOF,SAAKpB,WAAL;AACE,aAAM,EACJ,GAAGe,KADC;AAEJL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,MAAZ,CAAmBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWP,MAAM,CAACE,OAA5C,CAFH;AAGJJ,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAMF,SAAKV,QAAL;AACE,aAAM,EACJ,GAAGW,KADC;AAEJJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFZ,OAAN;;AAKF,SAAKjB,WAAL;AACE,aAAM,EACJ,GAAGc,KADC;AAEJF,QAAAA,MAAM,EAACG,MAAM,CAACE;AAFV,OAAN;;AAIF,SAAKb,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKL,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELL,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF,SAAKJ,iBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF;AACE,aAAOE,KAAP;AAxDJ;AA0DD,CA3DD","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  TODO_ERRORS,\n  UPDATE_TODO,\n  GET_TODOS,\n  GET_TODO,\n  SET_TODO_LOADING,\n  CLEAR_TODO_ERRORS,\n  CLEAR_TODO_CURRENT,\n  CLEAR_TODOS,\n} from \"../actions/types\";\n\nconst initialState = {\n  todos: null,\n  current: null,\n  loading: false,\n  errors: null,\n  success: null,\n};\n\n\n\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TODOS:\n      return{\n        ...state,\n        todos: action.payload,\n        loading: false\n      }\n    case ADD_TODO:\n    case UPDATE_TODO:\n      return{\n        ...state,\n        todos: [...state.todos, action.payload.data],\n        loading: false,\n        success: action.payload.message\n      }\n\n    case DELETE_TODO:\n      return{\n        ...state,\n        todos: state.todos.filter(tod => tod.id !== action.payload),\n        success: 'Item deleted successfully'\n      }\n\n    case GET_TODO:\n      return{\n        ...state,\n        current: action.payload\n      }\n\n    case TODO_ERRORS:\n      return{\n        ...state,\n        errors:action.payload\n      }\n    case SET_TODO_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CLEAR_TODO_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case CLEAR_TODOS:\n      return {\n        ...state,\n        todos: null,\n      };\n    case CLEAR_TODO_ERRORS:\n      return {\n        ...state,\n        errors: null,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}