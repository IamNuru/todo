{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, ERRORS, UPDATE_TODO, GET_TODOS, GET_TODO, SET_LOADING, CLEAR_ERRORS } from \"./types\"; //actions\n//add todo item to server\n\nexport const addTodo = data => async dispatch => {\n  //Add to local storage\n  var stodos = [];\n\n  if (localStorage.getItem(\"todos\")) {\n    stodos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n\n  stodos.push({\n    id: Math.abs(new Date()),\n    description: data.description,\n    deadline: data.deadline,\n    status: false\n  });\n  await localStorage.setItem(\"todos\", JSON.stringify(stodos));\n}; //get todos from server\n\nexport const getTodos = () => dispatch => {\n  setLoading();\n\n  if (localStorage.getItem(\"todos\")) {\n    dispatch({\n      type: GET_TODOS,\n      payload: JSON.parse(localStorage.getItem(\"todos\"))\n    });\n  } else {\n    dispatch({\n      type: ERRORS,\n      payload: 'NO DATA AVAILABLE'\n    });\n  }\n}; //delete todo from locastorage\n\nexport const deleteTodo = id => dispatch => {\n  if (localStorage.getItem(\"todos\")) {\n    let stodos = JSON.parse(localStorage.getItem(\"todos\"));\n    let filteredStodos = stodos.filter(item => item.id !== id);\n    localStorage.setItem(\"todos\", JSON.stringify(filteredStodos));\n  }\n}; //update a todo item\n\nexport const updateTodo = data => async dispatch => {\n  const td = JSON.parse(localStorage.getItem(\"todos\"));\n  var foundIndex = td.findIndex(x => x.id == data.id);\n  td[foundIndex] = data;\n  /* var stodos = []; */\n\n  /* if (localStorage.getItem(\"todos\")) {\n       stodos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  stodos.push({\n      id: Math.abs(new Date()),\n      description: data.description,\n      deadline: data.deadline,\n      status: false,\n  }); */\n\n  await localStorage.setItem(\"todos\", JSON.stringify(td));\n  /* await localStorage.setItem(\"todos\", JSON.stringify(stodos)); */\n}; //clear todo errors\n\nexport const clearErrors = () => {\n  console.log('loading');\n  return {\n    type: CLEAR_ERRORS\n  };\n}; //set loading\n\nexport const setLoading = () => {\n  console.log('loadingS');\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodoActions.js"],"names":["ADD_TODO","DELETE_TODO","ERRORS","UPDATE_TODO","GET_TODOS","GET_TODO","SET_LOADING","CLEAR_ERRORS","addTodo","data","dispatch","stodos","localStorage","getItem","JSON","parse","push","id","Math","abs","Date","description","deadline","status","setItem","stringify","getTodos","setLoading","type","payload","deleteTodo","filteredStodos","filter","item","updateTodo","td","foundIndex","findIndex","x","clearErrors","console","log"],"mappings":"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","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  ERRORS,\n  UPDATE_TODO,\n  GET_TODOS,\n  GET_TODO,\n  SET_LOADING,\n  CLEAR_ERRORS,\n} from \"./types\";\n\n//actions\n\n\n\n//add todo item to server\nexport const addTodo = (data) => async (dispatch) => {\n  //Add to local storage\n  var stodos = [];\n  if (localStorage.getItem(\"todos\")) {\n      stodos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  stodos.push({\n      id: Math.abs(new Date()),\n      description: data.description,\n      deadline: data.deadline,\n      status: false,\n  });\n  await localStorage.setItem(\"todos\", JSON.stringify(stodos));\n};\n\n\n\n\n//get todos from server\nexport const getTodos = () => (dispatch) => {\n    setLoading();\n  if (localStorage.getItem(\"todos\")) {\n    dispatch({\n      type: GET_TODOS,\n      payload: JSON.parse(localStorage.getItem(\"todos\")),\n    });\n  } else {\n    dispatch({\n      type: ERRORS,\n      payload: 'NO DATA AVAILABLE'\n    });\n  }\n};\n\n\n\n//delete todo from locastorage\nexport const deleteTodo = (id) => (dispatch) =>{\n    if (localStorage.getItem(\"todos\")) {\n        let stodos = JSON.parse(localStorage.getItem(\"todos\"));\n        let filteredStodos = stodos.filter(item => item.id !== id);\n        localStorage.setItem(\"todos\", JSON.stringify(filteredStodos));\n    }\n}\n\n//update a todo item\nexport const updateTodo = (data) => async (dispatch) => {\n  const td = JSON.parse(localStorage.getItem(\"todos\"))\n  var foundIndex = td.findIndex(x => x.id == data.id);\n  td[foundIndex] = data;\n  /* var stodos = []; */\n  /* if (localStorage.getItem(\"todos\")) {\n\n      stodos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  stodos.push({\n      id: Math.abs(new Date()),\n      description: data.description,\n      deadline: data.deadline,\n      status: false,\n  }); */\n  await localStorage.setItem(\"todos\", JSON.stringify(td));\n  /* await localStorage.setItem(\"todos\", JSON.stringify(stodos)); */\n};\n\n\n\n//clear todo errors\nexport const clearErrors = () => {\n    console.log('loading')\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n\n\n\n//set loading\nexport const setLoading = () => {\n    console.log('loadingS')\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}