{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, ERRORS, UPDATE_TODO, GET_TODOS, GET_TODO, SET_LOADING, CLEAR_ERRORS } from './types'; //actions\n//add todo item to server\n//get todos from server\n\nexport const getTodos = () => async dispatch => {\n  try {\n    fetch('https://jsonplaceholder.typicode.com/todos').then(response => response.json()).then(json => dispatch({\n      type: GET_TODOS,\n      payload: json\n    }));\n  } catch (error) {\n    dispatch({\n      type: ERRORS,\n      payload: error.response\n    });\n  }\n}; //delete todo from server\n//update a todo item\n//clear todo errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n}; //set loading\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodoActions.js"],"names":["ADD_TODO","DELETE_TODO","ERRORS","UPDATE_TODO","GET_TODOS","GET_TODO","SET_LOADING","CLEAR_ERRORS","getTodos","dispatch","fetch","then","response","json","type","payload","error","clearErrors","setLoading"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,WAAjB,EAA6BC,MAA7B,EAAoCC,WAApC,EAAgDC,SAAhD,EAA0DC,QAA1D,EAAmEC,WAAnE,EAAgFC,YAAhF,QAAmG,SAAnG,C,CAGA;AAEA;AAGA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAiB;AAC3C,MAAI;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECE,IAAD,IAAUJ,QAAQ,CAAC;AACnBK,MAAAA,IAAI,EAAEV,SADa;AAEnBW,MAAAA,OAAO,EAAEF;AAFU,KAAD,CAFlB;AAMH,GAPD,CAOE,OAAOG,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEZ,MADD;AAELa,MAAAA,OAAO,EAAEC,KAAK,CAACJ;AAFV,KAAD,CAAR;AAIH;AACJ,CAdM,C,CAiBP;AAGA;AAGA;;AACA,OAAO,MAAMK,WAAW,GAAG,MAAK;AAC5B,SAAM;AACFH,IAAAA,IAAI,EAACP;AADH,GAAN;AAGH,CAJM,C,CAOP;;AACA,OAAO,MAAMW,UAAU,GAAG,MAAK;AAC3B,SAAO;AACHJ,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM","sourcesContent":["import {ADD_TODO,DELETE_TODO,ERRORS,UPDATE_TODO,GET_TODOS,GET_TODO,SET_LOADING, CLEAR_ERRORS} from './types'\n\n\n//actions\n\n//add todo item to server\n\n\n//get todos from server\nexport const getTodos = () => async dispatch =>{\n    try {\n        fetch('https://jsonplaceholder.typicode.com/todos')\n  .then((response) => response.json())\n  .then((json) => dispatch({\n        type: GET_TODOS,\n        payload: json}));\n        \n    } catch (error) {\n        dispatch({\n            type: ERRORS,\n            payload: error.response\n        })\n    }\n}\n\n\n//delete todo from server\n\n\n//update a todo item\n\n\n//clear todo errors\nexport const clearErrors = () =>{\n    return{\n        type:CLEAR_ERRORS\n    }\n}\n\n\n//set loading\nexport const setLoading = () =>{\n    return {\n        type: SET_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}