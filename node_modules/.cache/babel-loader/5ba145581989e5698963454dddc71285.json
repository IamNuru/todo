{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_TODO_LIST, DELETE_TODO_LIST, ERRORS, UPDATE_TODO_LIST, GET_TODO_LIST, GET_TODO_LISTS, SET_LOADING, CLEAR_ERRORS, CLEAR_CURRENT } from \"./types\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  }\n}; //actions\n//add todo item to server\n\nexport const addTodolist = item => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/addtodolist`, item, config).then(res => {\n    dispatch({\n      type: ADD_TODO_LIST,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ERRORS,\n      payload: err.response.data.errors\n    });\n  });\n}; //get todos from server\n\nexport const getTodolists = () => async dispatch => {\n  setLoading();\n\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/todolists`);\n    const data = await res.json();\n    dispatch({\n      type: GET_TODO_LISTS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ERRORS,\n      payload: \"Something went wrong\"\n    });\n  }\n}; //delete todo from locastorage\n\nexport const deleteTodolist = id => async dispatch => {\n  await axios.delete(`${process.env.REACT_APP_API_URL}/todolist/${id}`, config).then(res => {\n    dispatch({\n      type: DELETE_TODO_LIST,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ERRORS,\n      payload: err.response.data.errors\n    });\n  });\n}; //update a todo item\n\nexport const updateTodolist = (id, item) => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/updatetodolist/${id}`, item, config).then(res => {\n    dispatch({\n      type: UPDATE_TODO_LIST,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ERRORS,\n      payload: err.response.data.errors\n    });\n  });\n}; //set the current\n\nexport const setCurrent = data => dispatch => {\n  dispatch({\n    type: GET_TODO_LIST,\n    payload: data\n  });\n}; //clear todo errors\n\n/* export const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS,\n  };\n}; */\n//clear current\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; //set loading\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodolistActions.js"],"names":["axios","ADD_TODO_LIST","DELETE_TODO_LIST","ERRORS","UPDATE_TODO_LIST","GET_TODO_LIST","GET_TODO_LISTS","SET_LOADING","CLEAR_ERRORS","CLEAR_CURRENT","config","headers","addTodolist","item","dispatch","post","process","env","REACT_APP_API_URL","then","res","type","payload","data","catch","err","response","errors","getTodolists","setLoading","fetch","json","error","deleteTodolist","id","delete","updateTodolist","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n  ADD_TODO_LIST,\n  DELETE_TODO_LIST,\n  ERRORS,\n  UPDATE_TODO_LIST,\n  GET_TODO_LIST,\n  GET_TODO_LISTS,\n  SET_LOADING,\n  CLEAR_ERRORS,\n  CLEAR_CURRENT,\n} from \"./types\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n};\n//actions\n\n//add todo item to server\nexport const addTodolist = (item) => async (dispatch) => {\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/addtodolist`, item, config)\n    .then((res) => {\n      dispatch({\n        type: ADD_TODO_LIST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ERRORS,\n        payload: err.response.data.errors,\n      });\n    });\n};\n\n//get todos from server\nexport const getTodolists =() => async (dispatch) => {\n  setLoading()\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/todolists`);\n      const data = await res.json();\n      dispatch({\n        type: GET_TODO_LISTS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ERRORS,\n        payload: \"Something went wrong\",\n      });\n    }\n  };\n\n//delete todo from locastorage\nexport const deleteTodolist = (id) => async (dispatch) => {\n  await axios\n    .delete(`${process.env.REACT_APP_API_URL}/todolist/${id}`, config)\n    .then((res) => {\n      dispatch({\n        type: DELETE_TODO_LIST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ERRORS,\n        payload: err.response.data.errors,\n      });\n    });\n};\n\n//update a todo item\nexport const updateTodolist = (id, item) => async (dispatch) => {\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/updatetodolist/${id}`, item, config)\n    .then((res) => {\n      dispatch({\n        type: UPDATE_TODO_LIST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ERRORS,\n        payload: err.response.data.errors,\n      });\n    });\n};\n\n//set the current\nexport const setCurrent = (data) => (dispatch) => {\n  dispatch({\n    type: GET_TODO_LIST,\n    payload: data,\n  });\n};\n\n//clear todo errors\n/* export const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS,\n  };\n}; */\n\n//clear current\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n//set loading\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}