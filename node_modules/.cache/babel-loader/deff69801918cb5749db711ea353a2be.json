{"ast":null,"code":"import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { error_message, success_message, error_message_with_button, success_message_with_button } from \"../components/inc/Messages\";\nimport { ADD_TODO, DELETE_TODO, TODO_ERRORS, UPDATE_TODO, GET_TODOS, GET_TODO, SET_TODO_LOADING, CLEAR_TODO_ERRORS, CLEAR_TODO_CURRENT, CLEAR_TODOS } from \"./types\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  }\n}; //actions\n//add todo item to server\n\nexport const addTodo = (id, item) => async dispatch => {\n  console.log(id);\n  await axios.post(`${process.env.REACT_APP_API_URL}/additem/${id}`, item, config).then(res => {\n    console.log(res);\n    dispatch({\n      type: ADD_TODO,\n      payload: res.data\n    });\n    M.toast({\n      html: success_message_with_button(\"add\", res.data.message)\n    });\n  }).catch(err => {\n    var _err$response, _err$response$data, _err$response2, _err$response2$data;\n\n    dispatch({\n      type: TODO_ERRORS,\n      payload: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.errors\n    });\n    let errors = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.errors;\n    errors ? M.toast({\n      html: error_message_with_button(\"add\", errors[Object.keys(errors)[0]])\n    }) : M.toast({\n      html: error_message('Something went Wrong, refresh and try again')\n    });\n  });\n}; //get todos from server\n\nexport const getTodos = id => async dispatch => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/todos/${id}`);\n    const data = await res.json();\n    dispatch({\n      type: GET_TODOS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_ERRORS,\n      payload: \"Something went wrong\"\n    });\n  }\n}; //delete todo from server\n\nexport const deleteTodo = id => async dispatch => {\n  await axios.delete(`${process.env.REACT_APP_API_URL}/todo/${id}`, config).then(res => {\n    dispatch({\n      type: DELETE_TODO,\n      payload: id\n    });\n  }).catch(err => {\n    var _err$response3, _err$response3$data;\n\n    dispatch({\n      type: TODO_ERRORS,\n      payload: (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.errors\n    });\n  });\n}; //update a todo item\n\nexport const updateTodo = (id, item) => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/updatetodo/${id}`, item, config).then(res => {\n    dispatch({\n      type: UPDATE_TODO,\n      payload: res.data\n    });\n    M.toast({\n      html: success_message_with_button(\"add\", res.data.message)\n    });\n  }).catch(err => {\n    var _err$response4, _err$response4$data, _err$response5, _err$response5$data;\n\n    dispatch({\n      type: TODO_ERRORS,\n      payload: (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.errors\n    });\n    let errors = (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.errors;\n    M.toast({\n      html: error_message_with_button(\"edit\", errors[Object.keys(errors)[0]])\n    });\n  });\n}; //update a todo item\n\nexport const updateStatus = (id, status) => async dispatch => {\n  let stat = {\n    status: status\n  };\n  await axios.post(`${process.env.REACT_APP_API_URL}/updatestatus/${id}`, stat, config).then(res => {\n    M.toast({\n      html: success_message(res.data.message)\n    });\n    dispatch({\n      type: CLEAR_TODO_ERRORS\n    });\n  }).catch(err => {\n    var _err$response6, _err$response6$data;\n\n    let errors = (_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.errors;\n    M.toast({\n      html: error_message(errors[Object.keys(errors)[0]])\n    });\n  });\n}; //set the current\n\nexport const setCurrent = data => {\n  return {\n    type: GET_TODO,\n    payload: data\n  };\n}; //clear todo errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_TODO_ERRORS\n  };\n}; //clear stodos\n\nexport const clearTodos = () => {\n  return {\n    type: CLEAR_TODOS\n  };\n}; //clear current\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_TODO_CURRENT\n  };\n}; //set loading\n\nexport const setLoading = () => {\n  console.log(\"loadingS\");\n  return {\n    type: SET_TODO_LOADING\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodoActions.js"],"names":["axios","M","error_message","success_message","error_message_with_button","success_message_with_button","ADD_TODO","DELETE_TODO","TODO_ERRORS","UPDATE_TODO","GET_TODOS","GET_TODO","SET_TODO_LOADING","CLEAR_TODO_ERRORS","CLEAR_TODO_CURRENT","CLEAR_TODOS","config","headers","addTodo","id","item","dispatch","console","log","post","process","env","REACT_APP_API_URL","then","res","type","payload","data","toast","html","message","catch","err","response","errors","Object","keys","getTodos","fetch","json","error","deleteTodo","delete","updateTodo","updateStatus","status","stat","setCurrent","clearErrors","clearTodos","clearCurrent","setLoading"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { error_message, success_message, error_message_with_button,success_message_with_button} from \"../components/inc/Messages\"\n\n\nimport {\n  ADD_TODO,\n  DELETE_TODO,\n  TODO_ERRORS,\n  UPDATE_TODO,\n  GET_TODOS,\n  GET_TODO,\n  SET_TODO_LOADING,\n  CLEAR_TODO_ERRORS,\n  CLEAR_TODO_CURRENT,\n  CLEAR_TODOS,\n} from \"./types\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n};\n//actions\n\n//add todo item to server\nexport const addTodo = (id, item) => async (dispatch) => {\n  console.log(id);\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/additem/${id}`, item, config)\n    .then((res) => {\n      console.log(res);\n      dispatch({\n        type: ADD_TODO,\n        payload: res.data,\n      });\n      M.toast({ html: success_message_with_button(\"add\", res.data.message) });\n\n    })\n    .catch((err) => {\n      dispatch({\n        type: TODO_ERRORS,\n        payload: err.response?.data?.errors,\n      });\n      let errors = err.response?.data?.errors;\n      errors ? M.toast({ html: error_message_with_button(\"add\", errors[Object.keys(errors)[0]])})\n            :  M.toast({html: error_message('Something went Wrong, refresh and try again')})\n    });\n};\n\n//get todos from server\nexport const getTodos = (id) => async (dispatch) => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/todos/${id}`);\n    const data = await res.json();\n    dispatch({\n      type: GET_TODOS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_ERRORS,\n      payload: \"Something went wrong\",\n    });\n  }\n};\n\n//delete todo from server\nexport const deleteTodo = (id) => async (dispatch) => {\n  await axios\n    .delete(`${process.env.REACT_APP_API_URL}/todo/${id}`, config)\n    .then((res) => {\n      dispatch({\n        type: DELETE_TODO,\n        payload: id,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: TODO_ERRORS,\n        payload: err.response?.data?.errors,\n      });\n    });\n};\n\n//update a todo item\nexport const updateTodo = (id, item) => async (dispatch) => {\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/updatetodo/${id}`, item, config)\n    .then((res) => {\n      dispatch({\n        type: UPDATE_TODO,\n        payload: res.data,\n      });\n      M.toast({ html: success_message_with_button(\"add\", res.data.message) });\n    })\n    .catch((err) => {\n      dispatch({\n        type: TODO_ERRORS,\n        payload: err.response?.data?.errors,\n      });\n      let errors = err.response?.data?.errors;\n      M.toast({\n        html: error_message_with_button(\"edit\", errors[Object.keys(errors)[0]]),\n      });\n    });\n};\n//update a todo item\nexport const updateStatus = (id, status) => async (dispatch) => {\n  let stat = { status: status };\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/updatestatus/${id}`, stat, config)\n    .then((res) => {\n      M.toast({ html: success_message(res.data.message) });\n      dispatch({\n        type: CLEAR_TODO_ERRORS,\n      });\n    })\n    .catch((err) => {\n      let errors = err.response?.data?.errors;\n      M.toast({ html: error_message(errors[Object.keys(errors)[0]]) });\n    });\n};\n\n//set the current\nexport const setCurrent = (data) => {\n  return {\n    type: GET_TODO,\n    payload: data,\n  };\n};\n\n//clear todo errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_TODO_ERRORS,\n  };\n};\n\n//clear stodos\nexport const clearTodos = () => {\n  return {\n    type: CLEAR_TODOS,\n  };\n};\n\n//clear current\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_TODO_CURRENT,\n  };\n};\n\n//set loading\nexport const setLoading = () => {\n  console.log(\"loadingS\");\n  return {\n    type: SET_TODO_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}