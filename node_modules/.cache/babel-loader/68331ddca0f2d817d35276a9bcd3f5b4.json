{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/todo/src/components/modals/AddTodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport { addTodo, clearErrors } from \"../../actions/TodoActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTodoItem = ({\n  errors,\n  success,\n  addTodo,\n  clearErrors\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const add_todo_modal = useRef(''); //state\n\n  const [data, setData] = useState({\n    title: '',\n    deadline: ''\n  });\n  const {\n    title,\n    deadline\n  } = data;\n  useEffect(() => {\n    if (success) {\n      console.log(add_todo_modal.M);\n    }\n  }, [success]);\n  useEffect(() => {\n    return () => {\n      if (errors) {\n        clearErrors();\n      }\n    };\n  }, [errors]);\n\n  const onChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n\n    if (errors) {\n      clearErrors();\n    }\n  }; //submit form and persist to localstorage\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addTodo(id, data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add_todo_modal\",\n    ref: add_todo_modal,\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: title,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.title) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"helper-text\",\n              style: {\n                color: \"red\"\n              },\n              children: errors.title[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"deadline\",\n              value: deadline,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"deadline\",\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.deadline) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"helper-text\",\n              style: {\n                color: \"red\"\n              },\n              children: errors.deadline[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `modal-close waves-effect waves-light btn` //disabled={errors !== null}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons left\",\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), \"ADD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTodoItem, \"yFSghzE68065hfSFqTp0YLqz4qU=\", false, function () {\n  return [useParams];\n});\n\n_c = AddTodoItem;\n\nconst mapStateToProps = state => ({\n  errors: state.todo.errors,\n  success: state.todo.success\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  addTodo,\n  clearErrors\n})(AddTodoItem));\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodoItem\");","map":{"version":3,"sources":["/home/generous/projects/todo/src/components/modals/AddTodoItem.js"],"names":["React","useState","useEffect","useRef","connect","useParams","withRouter","addTodo","clearErrors","AddTodoItem","errors","success","id","add_todo_modal","data","setData","title","deadline","console","log","M","onChange","e","target","name","value","onSubmit","preventDefault","color","mapStateToProps","state","todo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, withRouter} from \"react-router-dom\";\nimport { addTodo, clearErrors} from \"../../actions/TodoActions\";\n\nexport const AddTodoItem = ({ errors, success, addTodo, clearErrors }) => {\n\n  const { id } = useParams()\n  const add_todo_modal = useRef('')\n  \n  //state\n  const [data, setData] = useState({title:'', deadline:''})\n  const { title, deadline } = data;\n\n  useEffect(() => {\n    if(success){\n      console.log(add_todo_modal.M)\n    }\n    \n  }, [success])\n\n  useEffect(() => {\n    return () =>{\n      if(errors){\n        clearErrors();\n      }\n    }\n  }, [errors]);\n\n  const onChange = (e) => {\n    setData({...data, [e.target.name]: e.target.value})\n    if(errors){\n      clearErrors();\n    }\n    \n  };\n\n\n  //submit form and persist to localstorage\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addTodo(id , data);\n  };\n\n  return (\n    <div id=\"add_todo_modal\" ref={add_todo_modal} className=\"modal\">\n      <form onSubmit={onSubmit}>\n        <div className=\"modal-content\">\n          <h6>Add Todo</h6>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={title}\n                onChange={onChange}\n              />\n              <label htmlFor=\"title\">Title</label>\n              {errors?.title && (\n                <span className=\"helper-text\" style={{ color: \"red\" }}>\n                  {errors.title[0]}\n                </span>\n              )}\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                type=\"date\"\n                name=\"deadline\"\n                value={deadline}\n                onChange={onChange}\n              />\n              <label htmlFor=\"deadline\">Deadline</label>\n              {errors?.deadline && (\n                <span className=\"helper-text\" style={{ color: \"red\" }}>\n                  {errors.deadline[0]}\n                </span>\n              )}\n            </div>\n            \n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button\n            type=\"submit\"\n            className={`modal-close waves-effect waves-light btn`}\n            //disabled={errors !== null}\n          >\n            <i className=\"material-icons left\">save</i>ADD\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.todo.errors,\n  success: state.todo.success,\n});\n\nexport default withRouter(connect(mapStateToProps, { addTodo, clearErrors })(AddTodoItem));\n\n"]},"metadata":{},"sourceType":"module"}