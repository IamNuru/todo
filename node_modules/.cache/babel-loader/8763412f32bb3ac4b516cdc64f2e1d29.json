{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, ERRORS, UPDATE_TODO, GET_TODOS, GET_TODO, SET_LOADING, CLEAR_ERRORS, CLEAR_CURRENT } from \"./types\"; //actions\n//add todo item to server\n\nexport const addTodo = data => async dispatch => {\n  try {} catch (error) {}\n}; //get todos from server\n\nexport const getTodos = () => async dispatch => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/todos`);\n    const data = await res.json();\n  } catch (error) {}\n}; //delete todo from locastorage\n\nexport const deleteTodo = id => dispatch => {}; //update a todo item\n\nexport const updateTodo = (id, data) => async dispatch => {}; //set the current\n\nexport const setCurrent = data => dispatch => {\n  dispatch({\n    type: GET_TODO,\n    payload: data\n  });\n}; //clear todo errors\n\nexport const clearErrors = () => {\n  console.log('loading');\n  return {\n    type: CLEAR_ERRORS\n  };\n}; //clear current\n\nexport const clearCurrent = () => {\n  console.log('loading');\n  return {\n    type: CLEAR_CURRENT\n  };\n}; //set loading\n\nexport const setLoading = () => {\n  console.log('loadingS');\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodoActions.js"],"names":["ADD_TODO","DELETE_TODO","ERRORS","UPDATE_TODO","GET_TODOS","GET_TODO","SET_LOADING","CLEAR_ERRORS","CLEAR_CURRENT","addTodo","data","dispatch","error","getTodos","res","fetch","process","env","REACT_APP_API_URL","json","deleteTodo","id","updateTodo","setCurrent","type","payload","clearErrors","console","log","clearCurrent","setLoading"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,YARF,EASEC,aATF,QAUO,SAVP,C,CAYA;AAIA;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACjD,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ,CANM,C,CAWP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOF,QAAP,IAAoB;AAC9C,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QAAlC,CAAvB;AACA,UAAMR,IAAI,GAAG,MAAMI,GAAG,CAACK,IAAJ,EAAnB;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc,CAEf;AACJ,CAPM,C,CAWP;;AACA,OAAO,MAAMQ,UAAU,GAAIC,EAAD,IAASV,QAAD,IAAa,CAE9C,CAFM,C,CAIP;;AACA,OAAO,MAAMW,UAAU,GAAG,CAACD,EAAD,EAAKX,IAAL,KAAc,MAAOC,QAAP,IAAoB,CAE3D,CAFM,C,CAMP;;AACA,OAAO,MAAMY,UAAU,GAAIb,IAAD,IAASC,QAAQ,IAAG;AAC5CA,EAAAA,QAAQ,CAAC;AACPa,IAAAA,IAAI,EAAEnB,QADC;AAEPoB,IAAAA,OAAO,EAAEf;AAFF,GAAD,CAAR;AAID,CALM,C,CAQP;;AACA,OAAO,MAAMgB,WAAW,GAAG,MAAM;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF,SAAO;AACLJ,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD,CALM,C,CAOP;;AACA,OAAO,MAAMsB,YAAY,GAAG,MAAM;AAC9BF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF,SAAO;AACLJ,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD,CALM,C,CASP;;AACA,OAAO,MAAMsB,UAAU,GAAG,MAAM;AAC5BH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACF,SAAO;AACLJ,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD,CALM","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  ERRORS,\n  UPDATE_TODO,\n  GET_TODOS,\n  GET_TODO,\n  SET_LOADING,\n  CLEAR_ERRORS,\n  CLEAR_CURRENT,\n} from \"./types\";\n\n//actions\n\n\n\n//add todo item to server\nexport const addTodo = (data) => async (dispatch) => {\n    try {\n      \n    } catch (error) {\n      \n    }\n};\n\n\n\n\n//get todos from server\nexport const getTodos = () => async (dispatch) => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/todos`)\n      const data = await res.json()\n    } catch (error) {\n      \n    }\n};\n\n\n\n//delete todo from locastorage\nexport const deleteTodo = (id) => (dispatch) =>{\n    \n}\n\n//update a todo item\nexport const updateTodo = (id, data) => async (dispatch) => {\n  \n};\n\n\n\n//set the current\nexport const setCurrent = (data) =>dispatch =>{\n  dispatch({\n    type: GET_TODO,\n    payload: data\n  })\n}\n\n\n//clear todo errors\nexport const clearErrors = () => {\n    console.log('loading')\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n\n//clear current\nexport const clearCurrent = () => {\n    console.log('loading')\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n\n\n//set loading\nexport const setLoading = () => {\n    console.log('loadingS')\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}