{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_TODO, DELETE_TODO, ERRORS, UPDATE_TODO, GET_TODOS, GET_TODO, SET_LOADING, CLEAR_ERRORS, CLEAR_CURRENT } from \"./types\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  }\n}; //actions\n//add todo item to server\n\nexport const addTodo = item => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/additem`, item, config).then(res => {\n    dispatch({\n      type: ADD_TODO,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //get todos from server\n\nexport const getTodos = (id = 1) => async dispatch => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/todos/${id}`);\n    const data = await res.json();\n    dispatch({\n      type: GET_TODOS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ERRORS,\n      payload: \"Something went wrong\"\n    });\n  }\n}; //delete todo from locastorage\n\nexport const deleteTodo = id => dispatch => {}; //update a todo item\n\nexport const updateTodo = (id, data) => async dispatch => {}; //set the current\n\nexport const setCurrent = data => dispatch => {\n  dispatch({\n    type: GET_TODO,\n    payload: data\n  });\n}; //clear todo errors\n\nexport const clearErrors = () => {\n  console.log(\"loading\");\n  return {\n    type: CLEAR_ERRORS\n  };\n}; //clear current\n\nexport const clearCurrent = () => {\n  console.log(\"loading\");\n  return {\n    type: CLEAR_CURRENT\n  };\n}; //set loading\n\nexport const setLoading = () => {\n  console.log(\"loadingS\");\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/TodoActions.js"],"names":["axios","ADD_TODO","DELETE_TODO","ERRORS","UPDATE_TODO","GET_TODOS","GET_TODO","SET_LOADING","CLEAR_ERRORS","CLEAR_CURRENT","config","headers","addTodo","item","dispatch","post","process","env","REACT_APP_API_URL","then","res","type","payload","data","catch","err","response","getTodos","id","fetch","json","error","deleteTodo","updateTodo","setCurrent","clearErrors","console","log","clearCurrent","setLoading"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,YARF,EASEC,aATF,QAUO,SAVP;AAYA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEP,mCAA+B;AAFxB;AADI,CAAf,C,CAMA;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACnD,QAAMd,KAAK,CACRe,IADG,CACG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UADnC,EAC8CL,IAD9C,EACoDH,MADpD,EAEHS,IAFG,CAEGC,GAAD,IAAS;AACbN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEpB,QADC;AAEPqB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACdX,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAElB,MADC;AAEPmB,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFf,KAAD,CAAR;AAID,GAbG,CAAN;AAcD,CAfM,C,CAiBP;;AACA,OAAO,MAAMI,QAAQ,GACnB,CAACC,EAAE,GAAG,CAAN,KACA,MAAOd,QAAP,IAAoB;AAClB,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMS,KAAK,CAAE,GAAEb,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UAASU,EAAG,EAA9C,CAAvB;AACA,UAAML,IAAI,GAAG,MAAMH,GAAG,CAACU,IAAJ,EAAnB;AACAhB,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEhB,SADC;AAEPiB,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACdjB,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAElB,MADC;AAEPmB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;AACF,CAhBI,C,CAkBP;;AACA,OAAO,MAAMU,UAAU,GAAIJ,EAAD,IAASd,QAAD,IAAc,CAAE,CAA3C,C,CAEP;;AACA,OAAO,MAAMmB,UAAU,GAAG,CAACL,EAAD,EAAKL,IAAL,KAAc,MAAOT,QAAP,IAAoB,CAAE,CAAvD,C,CAEP;;AACA,OAAO,MAAMoB,UAAU,GAAIX,IAAD,IAAWT,QAAD,IAAc;AAChDA,EAAAA,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEf,QADC;AAEPgB,IAAAA,OAAO,EAAEC;AAFF,GAAD,CAAR;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMY,WAAW,GAAG,MAAM;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAO;AACLhB,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD,CALM,C,CAOP;;AACA,OAAO,MAAM8B,YAAY,GAAG,MAAM;AAChCF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAO;AACLhB,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD,CALM,C,CAOP;;AACA,OAAO,MAAM8B,UAAU,GAAG,MAAM;AAC9BH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAO;AACLhB,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CALM","sourcesContent":["import axios from \"axios\";\n\nimport {\n  ADD_TODO,\n  DELETE_TODO,\n  ERRORS,\n  UPDATE_TODO,\n  GET_TODOS,\n  GET_TODO,\n  SET_LOADING,\n  CLEAR_ERRORS,\n  CLEAR_CURRENT,\n} from \"./types\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n};\n//actions\n\n//add todo item to server\nexport const addTodo = (item) => async (dispatch) => {\n  await axios\n    .post(`${process.env.REACT_APP_API_URL}/additem`, item, config)\n    .then((res) => {\n      dispatch({\n        type: ADD_TODO,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//get todos from server\nexport const getTodos =\n  (id = 1) =>\n  async (dispatch) => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/todos/${id}`);\n      const data = await res.json();\n      dispatch({\n        type: GET_TODOS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ERRORS,\n        payload: \"Something went wrong\",\n      });\n    }\n  };\n\n//delete todo from locastorage\nexport const deleteTodo = (id) => (dispatch) => {};\n\n//update a todo item\nexport const updateTodo = (id, data) => async (dispatch) => {};\n\n//set the current\nexport const setCurrent = (data) => (dispatch) => {\n  dispatch({\n    type: GET_TODO,\n    payload: data,\n  });\n};\n\n//clear todo errors\nexport const clearErrors = () => {\n  console.log(\"loading\");\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n\n//clear current\nexport const clearCurrent = () => {\n  console.log(\"loading\");\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n//set loading\nexport const setLoading = () => {\n  console.log(\"loadingS\");\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}