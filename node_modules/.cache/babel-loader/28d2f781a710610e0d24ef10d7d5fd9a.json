{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/todo/src/components/inc/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  user: {\n    user,\n    login\n  },\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (login) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...rest,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/un-authorised-page\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/generous/projects/todo/src/components/inc/ProtectedRoute.js"],"names":["React","Route","Redirect","connect","ProtectedRoute","user","login","component","Component","rest","props","pathname","state","from","location","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAR;AAAuBC,EAAAA,SAAS,EAAEC,SAAlC;AAA6C,KAAGC;AAAhD,CAAD,KAA2D;AAG9E,sBACI,QAAC,KAAD,OAAYA,IAAZ;AAAmB,IAAA,MAAM,EACrBC,KAAK,IAAG;AACJ,UAAGJ,KAAH,EAAS;AACL,4BAAO,QAAC,SAAD,OAAeG,IAAf;AAAA,aAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEK;AACD,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EACf;AACIC,YAAAA,QAAQ,EAAE,qBADd;AAEIC,YAAAA,KAAK,EAAC;AACFC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADV;AAFV;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH;AACJ;AAdL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAvBD;;KAAMV,c;;AA0BN,MAAMW,eAAe,GAAGH,KAAK,KAAI;AAC7BP,EAAAA,IAAI,EAAEO,KAAK,CAACP;AADiB,CAAJ,CAA7B;;AAGA,eAAeF,OAAO,CAACY,eAAD,CAAP,CAAyBX,cAAzB,CAAf","sourcesContent":["import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\nconst ProtectedRoute = ({ user: {user, login}, component: Component, ...rest}) => {\n    \n\n    return (\n        <Route { ...rest } render={\n            props =>{\n                if(login){\n                    return <Component {...rest} {...props} />\n                }else{\n                    return <Redirect to={\n                        {\n                            pathname: \"/un-authorised-page\",\n                            state:{\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n            }\n        }>\n\n        </Route>\n    )\n}\n\n\nconst mapStateToProps = state =>({\n    user: state.user\n})\nexport default connect(mapStateToProps)(ProtectedRoute);"]},"metadata":{},"sourceType":"module"}