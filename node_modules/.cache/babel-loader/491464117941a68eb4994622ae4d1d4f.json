{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/todo/src/components/modals/AddTodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo, getTodos, clearErrors } from \"../../actions/TodoActions\";\nimport { getTodolists } from \"../../actions/TodolistActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTodoItem = ({\n  todolists,\n  errors,\n  addTodo,\n  getTodos,\n  clearErrors\n}) => {\n  _s();\n\n  //state\n  const [title, setTitle] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [todolist, setTodolist] = useState(\"fake\");\n  useEffect(() => {\n    clearErrors();\n  }, []);\n\n  const onTitleChange = e => {\n    setTitle(e.target.value);\n    clearErrors();\n  };\n\n  const onDeadlineChange = e => {\n    setDeadline(e.target.value);\n    clearErrors();\n  }; //submit form and persist to localstorage\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = {\n      todolist,\n      title,\n      deadline\n    };\n    addTodo(data);\n    getTodos();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add_todo_modal\",\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: title,\n              onChange: onTitleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.title) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"helper-text\",\n              style: {\n                color: \"red\"\n              },\n              children: errors.title[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"deadline\",\n              value: deadline,\n              onChange: onDeadlineChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"deadline\",\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.deadline) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"helper-text\",\n              style: {\n                color: \"red\"\n              },\n              children: errors.deadline[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              children: [(todolists === null || todolists === void 0 ? void 0 : todolists.length) > 0 ? todolists.map(t => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: t.id,\n                  children: t.name\n                }, t.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 30\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                selected: true,\n                children: \"No todolist \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Option 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select associated todolist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.todolist) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"helper-text\",\n              style: {\n                color: \"red\"\n              },\n              children: errors.todolist[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"waves-effect waves-light btn\",\n          disabled: errors !== null,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons left\",\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), \"ADD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTodoItem, \"Nd35k1nxIjXqV2vj9fG2QYknQM8=\");\n\n_c = AddTodoItem;\n\nconst mapStateToProps = state => ({\n  errors: state.todo.errors,\n  todolists: state.todolist.todolists\n});\n\nexport default connect(mapStateToProps, {\n  addTodo,\n  getTodos,\n  clearErrors\n})(AddTodoItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodoItem\");","map":{"version":3,"sources":["/home/generous/projects/todo/src/components/modals/AddTodoItem.js"],"names":["React","useState","useEffect","connect","addTodo","getTodos","clearErrors","getTodolists","AddTodoItem","todolists","errors","title","setTitle","deadline","setDeadline","todolist","setTodolist","onTitleChange","e","target","value","onDeadlineChange","onSubmit","preventDefault","data","color","length","map","t","id","name","mapStateToProps","state","todo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo, getTodos, clearErrors } from \"../../actions/TodoActions\";\nimport { getTodolists } from \"../../actions/TodolistActions\";\n\nexport const AddTodoItem = ({ todolists, errors, addTodo, getTodos, clearErrors }) => {\n  //state\n  const [title, setTitle] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [todolist, setTodolist] = useState(\"fake\");\n\n  useEffect(() => {\n    clearErrors();\n  }, []);\n\n  const onTitleChange = (e) => {\n    setTitle(e.target.value);\n    clearErrors();\n  };\n  const onDeadlineChange = (e) => {\n    setDeadline(e.target.value);\n    clearErrors();\n  };\n\n  //submit form and persist to localstorage\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      todolist,\n      title,\n      deadline,\n    };\n    addTodo(data);\n    getTodos();\n  };\n\n  return (\n    <div id=\"add_todo_modal\" className=\"modal\">\n      <form onSubmit={onSubmit}>\n        <div className=\"modal-content\">\n          <h6>Add Todo</h6>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={title}\n                onChange={onTitleChange}\n              />\n              <label htmlFor=\"title\">Title</label>\n              {errors?.title && (\n                <span className=\"helper-text\" style={{ color: \"red\" }}>\n                  {errors.title[0]}\n                </span>\n              )}\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                type=\"date\"\n                name=\"deadline\"\n                value={deadline}\n                onChange={onDeadlineChange}\n              />\n              <label htmlFor=\"deadline\">Deadline</label>\n              {errors?.deadline && (\n                <span className=\"helper-text\" style={{ color: \"red\" }}>\n                  {errors.deadline[0]}\n                </span>\n              )}\n            </div>\n            <div className=\"input-field col s12\">\n              <select>\n                {\n                  todolists?.length > 0 ? (\n                    todolists.map(t =>{\n                      return <option value={t.id}key={t.id}>{t.name}</option>\n                    })\n                  ):(\n                    <option value=\"\" disabled selected>No todolist </option>\n                  )\n                }\n                \n                \n                <option value=\"3\">Option 3</option>\n              </select>\n              <label>Select associated todolist</label>\n              {errors?.todolist && (\n                <span className=\"helper-text\" style={{ color: \"red\" }}>\n                  {errors.todolist[0]}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button\n            type=\"submit\"\n            className=\"waves-effect waves-light btn\"\n            disabled={errors !== null}\n          >\n            <i className=\"material-icons left\">save</i>ADD\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.todo.errors,\n  todolists: state.todolist.todolists\n});\n\nexport default connect(mapStateToProps, { addTodo, getTodos, clearErrors })(\n  AddTodoItem\n);\n"]},"metadata":{},"sourceType":"module"}