{"ast":null,"code":"import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { REGISTER_USER, LOGIN_USER, USER_ERROR, SET_LOGIN } from \"./types\"; //configuration\n\nconst config = {\n  headers: {\n    'Content-type': 'application/json'\n  }\n}; //check if there is a user object in localstorage \n//if there is, turn login in state to true\n\nif (localStorage.getItem(\"todo_user\")) {\n  loggedin();\n}\n\nconst loggedin = () => {\n  return {\n    type: SET_LOGIN,\n    payload: JSON.parse(localStorage.getItem(\"todo_user\"))\n  };\n}; //actions\n//CREATE AN ACCOUNT\n\n\nexport const register = data => async dispatch => {\n  await axios.post(`${process.env.REACT_APP_API_URL}/register/user`, data, config).then(res => {\n    dispatch({\n      type: REGISTER_USER,\n      payload: res.data\n    }); //update local storage with res.data\n\n    localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data));\n  }).catch(err => {\n    dispatch({\n      type: USER_ERROR,\n      payload: err.response.data.errors\n    });\n  });\n}; //login user\n\nexport const login = data => async dispatch => {\n  await axios.get(`${process.env.REACT_APP_API_URL}/login/user`, data, config).then(res => {\n    dispatch({\n      type: LOGIN_USER,\n      payload: res.data\n    }); //update local storage with res.data\n  }).catch(err => {\n    dispatch({\n      type: USER_ERROR,\n      payload: err.response.data.errors\n    });\n  });\n};","map":{"version":3,"sources":["/home/generous/projects/todo/src/actions/User.js"],"names":["axios","M","REGISTER_USER","LOGIN_USER","USER_ERROR","SET_LOGIN","config","headers","localStorage","getItem","loggedin","type","payload","JSON","parse","register","data","dispatch","post","process","env","REACT_APP_API_URL","then","res","setItem","stringify","catch","err","response","errors","login","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,4CAAd;AAEA,SAAQC,aAAR,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,SAA/C,QAA+D,SAA/D,C,CAEA;;AACA,MAAMC,MAAM,GAAE;AACVC,EAAAA,OAAO,EAAC;AACJ,oBAAgB;AADZ;AADE,CAAd,C,CAMA;AACA;;AACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACnCC,EAAAA,QAAQ;AACT;;AAEH,MAAMA,QAAQ,GAAG,MAAK;AAClB,SAAO;AACHC,IAAAA,IAAI,EAAEN,SADH;AAEHO,IAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;AAFN,GAAP;AAIH,CALD,C,CASA;AACA;;;AACA,OAAO,MAAMM,QAAQ,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAmB;AACjD,QAAMjB,KAAK,CAACkB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAA5C,EAA6DL,IAA7D,EAAmEV,MAAnE,EACLgB,IADK,CACAC,GAAG,IAAG;AACRN,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAEW,GAAG,CAACP;AAFR,KAAD,CAAR,CADQ,CAKR;;AACAR,IAAAA,YAAY,CAACgB,OAAb,CAAqB,WAArB,EAAkCX,IAAI,CAACY,SAAL,CAAeF,GAAG,CAACP,IAAJ,CAASA,IAAxB,CAAlC;AACH,GARK,EAQHU,KARG,CAQGC,GAAG,IAAG;AACXV,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAEP,UADD;AAELQ,MAAAA,OAAO,EAAEe,GAAG,CAACC,QAAJ,CAAaZ,IAAb,CAAkBa;AAFtB,KAAD,CAAR;AAIH,GAbK,CAAN;AAcH,CAfM,C,CAkBP;;AACA,OAAO,MAAMC,KAAK,GAAId,IAAD,IAAS,MAAOC,QAAP,IAAmB;AAC7C,QAAMjB,KAAK,CAAC+B,GAAN,CAAW,GAAEZ,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAA3C,EAAyDL,IAAzD,EAA+DV,MAA/D,EACLgB,IADK,CACAC,GAAG,IAAG;AACRN,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAER,UADD;AAELS,MAAAA,OAAO,EAAEW,GAAG,CAACP;AAFR,KAAD,CAAR,CADQ,CAKR;AACH,GAPK,EAOHU,KAPG,CAOGC,GAAG,IAAG;AACXV,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAEP,UADD;AAELQ,MAAAA,OAAO,EAAEe,GAAG,CAACC,QAAJ,CAAaZ,IAAb,CAAkBa;AAFtB,KAAD,CAAR;AAIH,GAZK,CAAN;AAaH,CAdM","sourcesContent":["import axios from \"axios\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport {REGISTER_USER, LOGIN_USER, USER_ERROR, SET_LOGIN} from \"./types\"\n\n//configuration\nconst config ={\n    headers:{\n        'Content-type' :'application/json'\n    }\n}\n\n//check if there is a user object in localstorage \n//if there is, turn login in state to true\nif (localStorage.getItem(\"todo_user\")) {\n    loggedin()\n  }\n\nconst loggedin = () =>{\n    return {\n        type: SET_LOGIN,\n        payload: JSON.parse(localStorage.getItem(\"todo_user\"))\n    }\n}\n\n\n\n//actions\n//CREATE AN ACCOUNT\nexport const register = (data) => async (dispatch) =>{\n    await axios.post(`${process.env.REACT_APP_API_URL}/register/user`, data, config)\n    .then(res =>{\n        dispatch({\n            type: REGISTER_USER,\n            payload: res.data\n        })\n        //update local storage with res.data\n        localStorage.setItem(\"todo_user\", JSON.stringify(res.data.data))\n    }).catch(err =>{\n        dispatch({\n            type: USER_ERROR,\n            payload: err.response.data.errors\n        })\n    })\n}\n\n\n//login user\nexport const login = (data) =>async (dispatch) =>{\n    await axios.get(`${process.env.REACT_APP_API_URL}/login/user`, data, config)\n    .then(res =>{\n        dispatch({\n            type: LOGIN_USER,\n            payload: res.data\n        })\n        //update local storage with res.data\n    }).catch(err =>{\n        dispatch({\n            type: USER_ERROR,\n            payload: err.response.data.errors\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}